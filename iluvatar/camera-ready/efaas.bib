@inproceedings{bashir_enabling_2021,
	address = {Seattle WA USA},
	title = {Enabling {Sustainable} {Clouds}: {The} {Case} for {Virtualizing} the {Energy} {System}},
	isbn = {978-1-4503-8638-8},
	shorttitle = {Enabling {Sustainable} {Clouds}},
	url = {https://dl.acm.org/doi/10.1145/3472883.3487009},
	doi = {10.1145/3472883.3487009},
	abstract = {Cloud platforms’ growing energy demand and carbon emissions are raising concern about their environmental sustainability. The current approach to enabling sustainable clouds focuses on improving energy-e�ciency and purchasing carbon o�sets. These approaches have limits: many cloud data centers already operate near peak e�ciency, and carbon o�sets cannot scale to near zero carbon where there is little carbon left to o�set. Instead, enabling sustainable clouds will require applications to adapt to when and where unreliable low-carbon energy is available. Applications cannot do this today because their energy use and carbon emissions are not visible to them, as the energy system provides the rigid abstraction of a continuous, reliable energy supply. This vision paper instead advocates for a “carbon �rst” approach to cloud design that elevates carbon-e�ciency to a �rst-class metric. To do so, we argue that cloud platforms should virtualize the energy system by exposing visibility into, and software-de�ned control of, it to applications, enabling them to de�ne their own abstractions for managing energy and carbon emissions based on their own requirements.},
	language = {en},
	urldate = {2022-04-11},
	booktitle = {Proceedings of the {ACM} {Symposium} on {Cloud} {Computing}},
	publisher = {ACM},
	author = {Bashir, Noman and Guo, Tian and Hajiesmaili, Mohammad and Irwin, David and Shenoy, Prashant and Sitaraman, Ramesh and Souza, Abel and Wierman, Adam},
	month = nov,
	year = {2021},
	pages = {350--358},
	annote = {- Load shifting is key: Enabling sustainable clouds will require applications to adapt to when and where unreliable low-carbon energy is available. Move computation to energy. Unreliability -{\textgreater} transient computing techniques building block. 
- Jevons, efficiency, PUE=2 OK if 0-carbon, 
- Exokernel approach to managing the complex carbon/energy tradeoffs. Cmon, appliations cant do that. The purpose of abstractions is to make it easy to do things. Thus the first step should be a concrete abstraction and /then/ break it if necessary. /HAS/ to be within the OS! Visibility into the hw and apps!
},
	file = {Bashir et al. - 2021 - Enabling Sustainable Clouds The Case for Virtuali.pdf:/home/prateeks/Zotero/storage/U83GJM6J/Bashir et al. - 2021 - Enabling Sustainable Clouds The Case for Virtuali.pdf:application/pdf},
}

@inproceedings{mishra_caloree_2018,
	address = {Williamsburg VA USA},
	title = {{CALOREE}: {Learning} {Control} for {Predictable} {Latency} and {Low} {Energy}},
	isbn = {978-1-4503-4911-6},
	shorttitle = {{CALOREE}},
	url = {https://dl.acm.org/doi/10.1145/3173162.3173184},
	doi = {10.1145/3173162.3173184},
	abstract = {Many modern computing systems must provide reliable latency with minimal energy. Two central challenges arise when allocating system resources to meet these conlicting goals: (1) complexityÐmodern hardware exposes diverse resources with complicated interactionsÐand (2) dynamicsÐ latency must be maintained despite unpredictable changes in operating environment or input. Machine learning accurately models the latency of complex, interacting resources, but does not address system dynamics; control theory adjusts to dynamic changes, but struggles with complex resource interaction. We therefore propose CALOREE, a resource manager that learns key control parameters to meet latency requirements with minimal energy in complex, dynamic environments. CALOREE breaks resource allocation into two sub-tasks: learning how interacting resources afect speedup, and controlling speedup to meet latency requirements with minimal energy. CALOREE deines a general control systemÐ whose parameters are customized by a learning frameworkÐ while maintaining control-theoretic formal guarantees that the latency goal will be met. We test CALOREE’s ability to deliver reliable latency on heterogeneous ARM big.LITTLE architectures in both single and multi-application scenarios. Compared to the best prior learning and control solutions, CALOREE reduces deadline misses by 60\% and energy consumption by 13\%.},
	language = {en},
	urldate = {2022-04-11},
	booktitle = {Proceedings of the {Twenty}-{Third} {International} {Conference} on {Architectural} {Support} for {Programming} {Languages} and {Operating} {Systems}},
	publisher = {ACM},
	author = {Mishra, Nikita and Imes, Connor and Lafferty, John D. and Hoffmann, Henry},
	month = mar,
	year = {2018},
	pages = {184--198},
	file = {Mishra et al. - 2018 - CALOREE Learning Control for Predictable Latency .pdf:/home/prateeks/Zotero/storage/N2TH65IH/Mishra et al. - 2018 - CALOREE Learning Control for Predictable Latency .pdf:application/pdf},
}

@inproceedings{hoffmann_jouleguard_2015,
	address = {Monterey California},
	title = {{JouleGuard}: energy guarantees for approximate applications},
	isbn = {978-1-4503-3834-9},
	shorttitle = {{JouleGuard}},
	url = {https://dl.acm.org/doi/10.1145/2815400.2815403},
	doi = {10.1145/2815400.2815403},
	abstract = {Energy consumption limits battery life in mobile devices and increases costs for servers and data centers. Approximate computing addresses energy concerns by allowing applications to trade accuracy for decreased energy consumption. Approximation frameworks can guarantee accuracy or performance and generally reduce energy usage; however, they provide no energy guarantees. Such guarantees would be beneﬁcial for users who have a ﬁxed energy budget and want to maximize application accuracy within that budget. We address this need by presenting JouleGuard: a runtime control system that coordinates approximate applications with system resource usage to provide control theoretic formal guarantees of energy consumption, while maximizing accuracy. We implement JouleGuard and test it on three different platforms (a mobile, tablet, and server) with eight different approximate applications created from two different frameworks. We ﬁnd that JouleGuard respects energy budgets, provides near optimal accuracy, adapts to phases in application workload, and provides better outcomes than application approximation or system resource adaptation alone. JouleGuard is general with respect to the applications and systems it controls, making it a suitable runtime for a number of approximate computing frameworks.},
	language = {en},
	urldate = {2022-04-11},
	booktitle = {Proceedings of the 25th {Symposium} on {Operating} {Systems} {Principles}},
	publisher = {ACM},
	author = {Hoffmann, Henry},
	month = oct,
	year = {2015},
	pages = {198--214},
	file = {Hoffmann - 2015 - JouleGuard energy guarantees for approximate appl.pdf:/home/prateeks/Zotero/storage/LRCLTNXU/Hoffmann - 2015 - JouleGuard energy guarantees for approximate appl.pdf:application/pdf},
}

@article{shen_power_2013,
	title = {Power containers: an {OS} facility for fine-grained power and energy management on multicore servers},
	language = {en},
	journal = {ASPLOS},
	author = {Shen, Kai and Shriraman, Arrvindh and Dwarkadas, Sandhya and Zhang, Xiao and Chen, Zhuan},
	year = {2013},
	pages = {12},
	annote = {- Power containers. Coarse-grained offline model, updated frequently. Interesting tricks for request tracing using OS/TCP support. Not applicable for modern Go/js apps?
},
	file = {Shen et al. - Power containers an OS facility for fine-grained .pdf:/home/prateeks/Zotero/storage/Y3Q67MFS/Shen et al. - Power containers an OS facility for fine-grained .pdf:application/pdf},
}

@inproceedings{dong_rethink_2014,
	address = {Maui Hawaii USA},
	title = {Rethink energy accounting with cooperative game theory},
	isbn = {978-1-4503-2783-1},
	url = {https://dl.acm.org/doi/10.1145/2639108.2639128},
	doi = {10.1145/2639108.2639128},
	abstract = {Energy accounting determines how much a software principal contributes to the total system energy consumption. It is the foundation for evaluating software and for operating system based energy management. While various energy accounting policies have been tried, there is no known way to evaluate them directly simply because it is hard to track all hardware usage by software in a heterogeneous multicore system like modern smartphones and tablets.},
	language = {en},
	urldate = {2022-04-11},
	booktitle = {Proceedings of the 20th annual international conference on {Mobile} computing and networking},
	publisher = {ACM},
	author = {Dong, Mian and Lan, Tian and Zhong, Lin},
	month = sep,
	year = {2014},
	pages = {531--542},
	file = {Dong et al. - 2014 - Rethink energy accounting with cooperative game th.pdf:/home/prateeks/Zotero/storage/SR8JMML5/Dong et al. - 2014 - Rethink energy accounting with cooperative game th.pdf:application/pdf},
}

@article{zhang_maximizing_2016,
	title = {Maximizing {Performance} {Under} a {Power} {Cap}: {A} {Comparison} of {Hardware}, {Software}, and {Hybrid} {Techniques}},
	abstract = {Power and thermal dissipation constrain multicore performance scaling. Modern processors are built such that they could sustain damaging levels of power dissipation, creating a need for systems that can implement processor power caps. A particular challenge is developing systems that can maximize performance within a power cap, and approaches have been proposed in both software and hardware. Software approaches are ﬂexible, allowing multiple hardware resources to be coordinated for maximum performance, but software is slow, requiring a long time to converge to the power target. In contrast, hardware power capping quickly converges to the the power cap, but only manages voltage and frequency, limiting its potential performance.},
	language = {en},
	journal = {ASPLOS},
	author = {Zhang, Huazhe and Hoffmann, Henry},
	year = {2016},
	pages = {15},
	file = {Zhang and Hoffmann - Maximizing Performance Under a Power Cap A Compar.pdf:/home/prateeks/Zotero/storage/9T7MWA9H/Zhang and Hoffmann - Maximizing Performance Under a Power Cap A Compar.pdf:application/pdf},
}

@article{mukhanov_alea_2017,
	title = {{ALEA}: {A} {Fine}-{Grained} {Energy} {Profiling} {Tool}},
	volume = {14},
	issn = {1544-3566, 1544-3973},
	shorttitle = {{ALEA}},
	url = {https://dl.acm.org/doi/10.1145/3050436},
	doi = {10.1145/3050436},
	abstract = {Energy efficiency is becoming increasingly important, yet few developers understand how source code changes affect the energy and power consumption of their programs. To enable them to achieve energy savings, we must associate energy consumption with software structures, especially at the fine-grained level of functions and loops. Most research in the field relies on direct power/energy measurements taken from on-board sensors or performance counters. However, this coarse granularity does not directly provide the needed fine-grained measurements. This article presents ALEA, a novel fine-grained energy profiling tool based on probabilistic analysis for fine-grained energy accounting. ALEA overcomes the limitations of coarse-grained power-sensing instruments to associate energy information effectively with source code at a fine-grained level. We demonstrate and validate that ALEA can perform accurate energy profiling at various granularity levels on two different architectures: Intel Sandy Bridge and ARM big.LITTLE. ALEA achieves a worst-case error of only 2\% for coarse-grained code structures and 6\% for fine-grained ones, with less than 1\% runtime overhead. Our use cases demonstrate that ALEA supports energy optimizations, with energy savings of up to 2.87 times for a latency-critical option pricing workload under a given power budget.},
	language = {en},
	number = {1},
	urldate = {2022-04-11},
	journal = {ACM Transactions on Architecture and Code Optimization},
	author = {Mukhanov, Lev and Petoumenos, Pavlos and Wang, Zheng and Parasyris, Nikos and Nikolopoulos, Dimitrios S. and De Supinski, Bronis R. and Leather, Hugh},
	month = apr,
	year = {2017},
	pages = {1--25},
	file = {Mukhanov et al. - 2017 - ALEA A Fine-Grained Energy Profiling Tool.pdf:/home/prateeks/Zotero/storage/ME4DKH8J/Mukhanov et al. - 2017 - ALEA A Fine-Grained Energy Profiling Tool.pdf:application/pdf},
}

@article{fieni_smartwatts_2020,
	title = {{SmartWatts}: {Self}-{Calibrating} {Software}-{Defined} {Power} {Meter} for {Containers}},
	shorttitle = {{SmartWatts}},
	url = {http://arxiv.org/abs/2001.02505},
	abstract = {Fine-grained power monitoring of software activities becomes unavoidable to maximize the power usage efﬁciency of data centers. In particular, achieving an optimal scheduling of containers requires the deployment of software-deﬁned power meters to go beyond the granularity of hardware power monitoring sensors, such as Power Distribution Units (PDU) or Intel’s Running Average Power Limit (RAPL), to deliver power estimations of activities at the granularity of software containers. However, the deﬁnition of the underlying power models that estimate the power consumption remains a long and fragile process that is tightly coupled to the host machine.},
	language = {en},
	urldate = {2022-04-11},
	journal = {arXiv:2001.02505 [cs]},
	author = {Fieni, Guillaume and Rouvoy, Romain and Seinturier, Lionel},
	month = jan,
	year = {2020},
	note = {arXiv: 2001.02505},
	keywords = {Computer Science - Distributed, Parallel, and Cluster Computing, Computer Science - Performance},
	annote = {- Smartwatts. Practical control-loop PMC+model based technique. Finds correlated power and PMCs. Smoothing. Simple python code.
- Repeated invoks can improve model. 
- Try it out!
},
	file = {Fieni et al. - 2020 - SmartWatts Self-Calibrating Software-Defined Powe.pdf:/home/prateeks/Zotero/storage/QTAP5SJB/Fieni et al. - 2020 - SmartWatts Self-Calibrating Software-Defined Powe.pdf:application/pdf},
}

@inproceedings{guo_power_2018,
	address = {Porto Portugal},
	title = {Power sandbox: power awareness redefined},
	isbn = {978-1-4503-5584-1},
	shorttitle = {Power sandbox},
	url = {https://dl.acm.org/doi/10.1145/3190508.3190533},
	doi = {10.1145/3190508.3190533},
	abstract = {Many apps benefit from knowing their power consumption and adapting their behaviors on the fly. To offer apps power knowledge at run time, an OS often meters system power and divides it among apps. Since the impacts of concurrent apps on system power are entangled, this approach not only makes it difficult to reason about power but also results in power side channels, a serious vulnerability. To this end, we introduce a new OS principal called power sandbox, which enables one app to observe the fine-grained power consumption of itself running in its vertical slice of the hardware/software stack. The observed power is insulated from the impacts of other apps. Our contribution is a set of lightweight kernel extensions that simultaneously i) enforce the power sandbox boundaries and ii) confine entailed performance loss to the sandboxed apps. Our experiences on two embedded platforms show that power sandboxes simplify reasoning about power, maintain fairness among apps, and minimize power side channels, thus facilitating construction of power-aware apps.},
	language = {en},
	urldate = {2022-04-11},
	booktitle = {Proceedings of the {Thirteenth} {EuroSys} {Conference}},
	publisher = {ACM},
	author = {Guo, Liwei and Xu, Tiantu and Xu, Mengwei and Liu, Xuanzhe and Lin, Felix Xiaozhu},
	month = apr,
	year = {2018},
	pages = {1--15},
	annote = {- Power sandbox. Security angle/leakage overplayed. Temporary highoverhead container. Useful for sampled fn invoks? 
- Resource balloons. Spatial ballon: no colocation by running dummy-OS tasks. Temporal balloon: no simultaenous inflight I/O, accel reqs. Dummy kernel tasks instead of restricting multiplexing at various kernel subsystems.
- Strange evaluation. Effectiveness not obvious. No comparisons/baselines.
},
	file = {Guo et al. - 2018 - Power sandbox power awareness redefined.pdf:/home/prateeks/Zotero/storage/3W8QGH6R/Guo et al. - 2018 - Power sandbox power awareness redefined.pdf:application/pdf},
}

@inproceedings{fieni_selfwatts_2021,
	address = {Melbourne, Australia},
	title = {{SelfWatts}: {On}-the-fly {Selection} of {Performance} {Events} to {Optimize} {Software}-defined {Power} {Meters}},
	isbn = {978-1-72819-586-5},
	shorttitle = {{SelfWatts}},
	url = {https://ieeexplore.ieee.org/document/9499557/},
	doi = {10.1109/CCGrid51090.2021.00042},
	abstract = {Fine-grained power monitoring of software-deﬁned infrastructures is unavoidable to maximize the power usage efﬁciency of data centers. However, the design of the underlying power models that estimate the power consumption of the monitored software components keeps being a long and fragile process that remains tightly coupled to the host machine and prevents a wider adoption by the industry beyond the rich literature on this topic.},
	language = {en},
	urldate = {2022-04-11},
	booktitle = {2021 {IEEE}/{ACM} 21st {International} {Symposium} on {Cluster}, {Cloud} and {Internet} {Computing} ({CCGrid})},
	publisher = {IEEE},
	author = {Fieni, Guillaume and Rouvoy, Romain and Seiturier, Lionel},
	month = may,
	year = {2021},
	pages = {324--333},
	file = {Fieni et al. - 2021 - SelfWatts On-the-fly Selection of Performance Eve.pdf:/home/prateeks/Zotero/storage/7XEUY5EQ/Fieni et al. - 2021 - SelfWatts On-the-fly Selection of Performance Eve.pdf:application/pdf},
}

@inproceedings{snowdon_koala_2009,
	address = {Nuremberg, Germany},
	title = {Koala: a platform for {OS}-level power management},
	isbn = {978-1-60558-482-9},
	shorttitle = {Koala},
	url = {http://portal.acm.org/citation.cfm?doid=1519065.1519097},
	doi = {10.1145/1519065.1519097},
	abstract = {Managing the power consumption of computing platforms is a complicated problem thanks to a multitude of hardware conﬁguration options and characteristics. Much of the academic research is based on unrealistic assumptions, and has, therefore, seen little practical uptake. We provide an overview of the difﬁculties facing power management schemes when used in real systems.},
	language = {en},
	urldate = {2022-04-11},
	booktitle = {Proceedings of the fourth {ACM} european conference on {Computer} systems - {EuroSys} '09},
	publisher = {ACM Press},
	author = {Snowdon, David C. and Le Sueur, Etienne and Petters, Stefan M. and Heiser, Gernot},
	year = {2009},
	pages = {289},
	file = {Snowdon et al. - 2009 - Koala a platform for OS-level power management.pdf:/home/prateeks/Zotero/storage/E26GA78G/Snowdon et al. - 2009 - Koala a platform for OS-level power management.pdf:application/pdf},
}

@article{tang_nipd_2017,
	title = {{NIPD}: {Non}-{Intrusive} {Power} {Disaggregation} in {Legacy} {Datacenters}},
	volume = {66},
	issn = {1557-9956},
	shorttitle = {{NIPD}},
	doi = {10.1109/TC.2016.2582163},
	abstract = {Fine-grained power monitoring, which refers to power monitoring at the server level, is critical to the efficient operation and energy saving of datacenters. Fined-grained power monitoring, however, is extremely challenging in legacy datacenters that host server systems not equipped with power monitoring sensors. Installing power monitoring hardware at the server level not only incurs high costs but also complicates the maintenance of high-density server clusters and enclosures. In this paper, we present a zero-cost, purely software-based solution to this challenging problem. We use a novel technique of non-intrusive power disaggregation (NIPD) that establishes power mapping functions (PMFs) between the states of servers and their power consumption, and infer the power consumption of each server with the aggregated power of the entire datacenter. The PMFs that we have developed can support both linear and nonlinear power models via the state feature transformation. To reduce the training overhead, we further develop adaptive PMFs update strategies and ensure that the training data and state features are appropriately selected. We implement and evaluate NIPD over a real-world datacenter with 326 nodes. The results show that our solution can provide high precision power estimation at both rack level and server level. In specific, with PMFs including only two nonlinear terms, our power estimation i) at rack level has mean relative error of 2.18 percent, and ii) at server level has mean relative errors of 9.61 and 7.53 percent corresponding to the idle and peak power, respectively.},
	number = {2},
	journal = {IEEE Transactions on Computers},
	author = {Tang, Guoming and Jiang, Weixiang and Xu, Zhifeng and Liu, Fangming and Wu, Kui},
	month = feb,
	year = {2017},
	note = {Conference Name: IEEE Transactions on Computers},
	keywords = {Monitoring, Hardware, Servers, Training, Power measurement, Power demand, Datacenter, Sensors, non-intrusive power disaggregation, power monitoring, servers},
	pages = {312--325},
	file = {IEEE Xplore Abstract Record:/home/prateeks/Zotero/storage/I8YCCC3Y/7494629.html:text/html;IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/VGVEFXTD/Tang et al. - 2017 - NIPD Non-Intrusive Power Disaggregation in Legacy.pdf:application/pdf},
}

@inproceedings{patel_perq_2019,
	address = {Phoenix AZ USA},
	title = {{PERQ}: {Fair} and {Efficient} {Power} {Management} of {Power}-{Constrained} {Large}-{Scale} {Computing} {Systems}},
	isbn = {978-1-4503-6670-0},
	shorttitle = {{PERQ}},
	url = {https://dl.acm.org/doi/10.1145/3307681.3326607},
	doi = {10.1145/3307681.3326607},
	abstract = {Large-scale computing systems are becoming increasingly more power-constrained, but these systems employ hardware overprovisioning to achieve higher system throughput because applications often do not consume the peak power capacity of nodes. Unfortunately, focusing on system throughput alone can lead to severe unfairness among multiple concurrently-running applications. This paper introduces PERQ, a new feedback-based principled approach to improve system throughput while achieving fairness among concurrent applications.},
	language = {en},
	urldate = {2022-04-11},
	booktitle = {Proceedings of the 28th {International} {Symposium} on {High}-{Performance} {Parallel} and {Distributed} {Computing}},
	publisher = {ACM},
	author = {Patel, Tirthak and Tiwari, Devesh},
	month = jun,
	year = {2019},
	pages = {171--182},
	file = {Patel and Tiwari - 2019 - PERQ Fair and Efficient Power Management of Power.pdf:/home/prateeks/Zotero/storage/K7Q6HZJ5/Patel and Tiwari - 2019 - PERQ Fair and Efficient Power Management of Power.pdf:application/pdf},
}

@inproceedings{gerhorst_energybudgets_2020,
	title = {{EnergyBudgets}: {Integrating} {Physical} {Energy} {Measurement} {Devices} into {Systems} {Software}},
	shorttitle = {{EnergyBudgets}},
	doi = {10.1109/SBESC51047.2020.9277849},
	abstract = {Excessive energy consumption is a critical problem for mobile computing systems due to their limited battery capacity. Software developers aim to improve energy efficiency by monitoring and profiling the energy consumption of their systems in order to discover and resolve energy hot-spots. However, energy measurement is often tedious since it involves a hardware setup as well as software integration. To support accurate but also convenient energy measurements, we propose the inclusion of external energy measurement devices into existing performance profiling subsystems. This approach allows the energy-consumption analysis of applications that run on the system under test (SUT) using the same tools as used for other performance metrics. To enable low-overhead self-monitoring, we propose a modular analysis approach, EnergyBudgets, which bridges external energy measurement hardware to the Linux perf subsystem. The evaluation of our implementation shows that energy budgets accurately measure the energy consumed by different workloads and allow for an overhead-reduction on the SUT by 20\% to 51\% in comparison to regular timers, while still guaranteeing the same level of precision.},
	booktitle = {2020 {X} {Brazilian} {Symposium} on {Computing} {Systems} {Engineering} ({SBESC})},
	author = {Gerhorst, Luis and Reif, Stefan and Herzog, Benedict and Hönig, Timo},
	month = nov,
	year = {2020},
	note = {ISSN: 2324-7894},
	keywords = {Monitoring, Hardware, Program processors, performance evaluation, resource management, Current measurement, Energy consumption, Power measurement, design methodologies, energy aware systems, Energy measurement, tools},
	pages = {1--8},
	file = {IEEE Xplore Abstract Record:/home/prateeks/Zotero/storage/JXR2QVHX/9277849.html:text/html;IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/3YJHHGJW/Gerhorst et al. - 2020 - EnergyBudgets Integrating Physical Energy Measure.pdf:application/pdf},
}

@article{chen_cross_2020,
	title = {Cross {Architectural} {Power} {Modelling}},
	url = {http://arxiv.org/abs/2003.08305},
	abstract = {Existing power modelling research focuses on the model rather than the process for developing models. An automated power modelling process that can be deployed on different processors for developing power models with high accuracy is developed. For this, (i) an automated hardware performance counter selection method that selects counters best correlated to power on both ARM and Intel processors, (ii) a noise ﬁlter based on clustering that can reduce the mean error in power models, and (iii) a two stage power model that surmounts challenges in using existing power models across multiple architectures are proposed and developed. The key results are: (i) the automated hardware performance counter selection method achieves comparable selection to the manual method reported in the literature, (ii) the noise ﬁlter reduces the mean error in power models by up to 55\%, and (iii) the two stage power model can predict dynamic power with less than 8\% error on both ARM and Intel processors, which is an improvement over classic models.},
	language = {en},
	urldate = {2022-04-11},
	journal = {arXiv:2003.08305 [cs]},
	author = {Chen, Kai and Kilpatrick, Peter and Nikolopoulos, Dimitrios S. and Varghese, Blesson},
	month = mar,
	year = {2020},
	note = {arXiv: 2003.08305},
	keywords = {Computer Science - Distributed, Parallel, and Cluster Computing},
	annote = {Comment: 10 pages; IEEE/ACM CCGrid 2020. arXiv admin note: text overlap with arXiv:1710.10325},
	file = {Chen et al. - 2020 - Cross Architectural Power Modelling.pdf:/home/prateeks/Zotero/storage/PRZFGCX2/Chen et al. - 2020 - Cross Architectural Power Modelling.pdf:application/pdf},
}

@article{agarwal_redesigning_2021,
	title = {Redesigning {Data} {Centers} for {Renewable} {Energy}},
	abstract = {Renewable energy is becoming an important power source for data centers, especially with the zero-carbon waste pledges made by big cloud providers. However, one of the main challenges of renewable energy sources is the high variability of power produced. Traditional approaches such as batteries or transmitting to the grid fall short on scale, overhead, or "green-ness". We propose Virtual Battery: instead of adapting the availability of power to match the computation demand we shift computational demand to meet the availability of power. Virtual batteries shift demand by requiring applications to either be flexible and delay-tolerant or proactively migrating to where power is (going to be) available. We show that using multiple virtual battery sites in combination can meet the needs of modern applications. Moreover, we show how an intelligent network and power aware co-scheduler can not only provide availability despite variability but also help mitigate migration related network overhead by over 30\% in total and 4.2× at peak.},
	language = {en},
	journal = {HotNets},
	author = {Agarwal, Anup and Sun, Jinghan and Noghabi, Shadi and Iyengar, Srinivasan and Badam, Anirudh and Chandra, Ranveer and Seshan, Srinivasan and Kalyanaraman, Shivkumar},
	year = {2021},
	pages = {8},
	file = {Agarwal et al. - 2021 - Redesigning Data Centers for Renewable Energy.pdf:/home/prateeks/Zotero/storage/WNWC7WAY/Agarwal et al. - 2021 - Redesigning Data Centers for Renewable Energy.pdf:application/pdf},
}

@article{cai_distilling_2022,
	title = {Distilling the {Real} {Cost} of {Production} {Garbage} {Collectors}},
	abstract = {Despite the long history of garbage collection (GC) and its prevalence in modern programming languages, there is surprisingly little clarity about its true cost. Without understanding their true cost, crucial tradeoffs made by garbage collectors (GCs) often go unnoticed. This can lead to misguided design constraints and evaluation criteria used by GC researchers and users, hindering the development of high-performance, low-cost GCs. In this paper, we develop a methodology that allows us to empirically estimate the absolute cost of GC for any given set of metrics. This fundamental quantification has eluded the research community, even when using modern, well-established methodologies. By distilling out the explicitly identifiable GC cost, we estimate the intrinsic application execution cost using different GCs. The minimum distilled cost forms a baseline. Subtracting this baseline from the total execution costs, we can then place an empirical lower bound on the absolute costs of different GCs. Using this methodology, we study five production GCs in OpenJDK 17, a high-performance Java runtime. We measure the cost of these collectors, and expose their respective key performance tradeoffs. We find that with a modestly sized heap, production GCs incur substantial overheads across a diverse suite of modern benchmarks, spending at least 7–82 \% more wallclock time and 6–92 \% more CPU cycles relative to the baseline cost. We show that these costs can be masked by concurrency and generous provisioning of memory/compute. In addition, we find that newer low-pause GCs are significantly more expensive than older GCs, and, surprisingly, sometimes deliver worse application latency than stop-the-world GCs. Our findings reaffirm that GC is by no means a solved problem and that a low-cost, low-latency GC remains elusive. We recommend adopting the distillation methodology together with a wider range of cost metrics for future GC evaluations. This will not only help the community more comprehensively understand the performance characteristics of different GCs, but also reveal opportunities for future GC optimizations.},
	language = {en},
	journal = {ISPASS},
	author = {Cai, Zixian and Blackburn, Stephen M and Bond, Michael D and Maas, Martin},
	year = {2022},
	pages = {12},
	file = {Cai et al. - Distilling the Real Cost of Production Garbage Col.pdf:/home/prateeks/Zotero/storage/LYLXMYYE/Cai et al. - Distilling the Real Cost of Production Garbage Col.pdf:application/pdf},
}

@article{anderson_treehouse_2022,
	title = {Treehouse: {A} {Case} {For} {Carbon}-{Aware} {Datacenter} {Software}},
	shorttitle = {Treehouse},
	url = {http://arxiv.org/abs/2201.02120},
	abstract = {The end of Dennard scaling and the slowing of Moore’s Law has put the energy use of datacenters on an unsustainable path. Datacenters are already a signiﬁcant fraction of worldwide electricity use, with application demand scaling at a rapid rate. We argue that substantial reductions in the carbon intensity of datacenter computing are possible with a software-centric approach: by making energy and carbon visible to application developers on a ﬁne-grained basis, by modifying system APIs to make it possible to make informed trade offs between performance and carbon emissions, and by raising the level of application programming to allow for ﬂexible use of more energy efﬁcient means of compute and storage. We also lay out a research agenda for systems software to reduce the carbon footprint of datacenter computing.},
	language = {en},
	urldate = {2022-05-06},
	journal = {arXiv:2201.02120 [cs]},
	author = {Anderson, Thomas and Belay, Adam and Chowdhury, Mosharaf and Cidon, Asaf and Zhang, Irene},
	month = jan,
	year = {2022},
	note = {arXiv: 2201.02120},
	keywords = {Computer Science - Distributed, Parallel, and Cluster Computing, Computer Science - Machine Learning, Computer Science - Networking and Internet Architecture, Computer Science - Computers and Society},
	file = {Anderson et al. - 2022 - Treehouse A Case For Carbon-Aware Datacenter Soft.pdf:/home/prateeks/Zotero/storage/AXCFP2YU/Anderson et al. - 2022 - Treehouse A Case For Carbon-Aware Datacenter Soft.pdf:application/pdf},
}

@article{agarwal_redesigning_2021,
	title = {Redesigning {Data} {Centers} for {Renewable} {Energy}},
	abstract = {Renewable energy is becoming an important power source for data centers, especially with the zero-carbon waste pledges made by big cloud providers. However, one of the main challenges of renewable energy sources is the high variability of power produced. Traditional approaches such as batteries or transmitting to the grid fall short on scale, overhead, or "green-ness". We propose Virtual Battery: instead of adapting the availability of power to match the computation demand we shift computational demand to meet the availability of power. Virtual batteries shift demand by requiring applications to either be flexible and delay-tolerant or proactively migrating to where power is (going to be) available. We show that using multiple virtual battery sites in combination can meet the needs of modern applications. Moreover, we show how an intelligent network and power aware co-scheduler can not only provide availability despite variability but also help mitigate migration related network overhead by over 30\% in total and 4.2× at peak.},
	language = {en},
	journal = {HotNets},
	author = {Agarwal, Anup and Sun, Jinghan and Noghabi, Shadi and Iyengar, Srinivasan and Badam, Anirudh and Chandra, Ranveer and Seshan, Srinivasan and Kalyanaraman, Shivkumar},
	year = {2021},
	pages = {8},
	file = {Agarwal et al. - 2021 - Redesigning Data Centers for Renewable Energy.pdf:/home/prateeks/Zotero/storage/WNWC7WAY/Agarwal et al. - 2021 - Redesigning Data Centers for Renewable Energy.pdf:application/pdf},
}

@article{wiesner_lets_2021,
	title = {Let's {Wait} {Awhile}: {How} {Temporal} {Workload} {Shifting} {Can} {Reduce} {Carbon} {Emissions} in the {Cloud}},
	shorttitle = {Let's {Wait} {Awhile}},
	url = {http://arxiv.org/abs/2110.13234},
	doi = {10.1145/3464298.3493399},
	abstract = {Depending on energy sources and demand, the carbon intensity of the public power grid fluctuates over time. Exploiting this variability is an important factor in reducing the emissions caused by data centers. However, regional differences in the availability of lowcarbon energy sources make it hard to provide general best practices for when to consume electricity. Moreover, existing research in this domain focuses mostly on carbon-aware workload migration across geo-distributed data centers, or addresses demand response purely from the perspective of power grid stability and costs.},
	language = {en},
	urldate = {2022-04-22},
	journal = {Proceedings of the 22nd International Middleware Conference},
	author = {Wiesner, Philipp and Behnke, Ilja and Scheinert, Dominik and Gontarska, Kordian and Thamsen, Lauritz},
	month = dec,
	year = {2021},
	note = {arXiv: 2110.13234},
	keywords = {Computer Science - Distributed, Parallel, and Cluster Computing},
	pages = {260--272},
	annote = {Comment: To be published in the proceedings of the 22nd International Middleware Conference (Middleware '21), December 6-10, 2021, Virtual Event, Canada},
	file = {Wiesner et al. - 2021 - Let's Wait Awhile How Temporal Workload Shifting .pdf:/home/prateeks/Zotero/storage/YM5KS7ID/Wiesner et al. - 2021 - Let's Wait Awhile How Temporal Workload Shifting .pdf:application/pdf},
}

@inproceedings{sharma2011blink,
  title={Blink: managing server clusters on intermittent power},
  author={Sharma, Navin and Barker, Sean and Irwin, David and Shenoy, Prashant},
  booktitle={Proceedings of the sixteenth international conference on Architectural support for programming languages and operating systems},
  pages={185--198},
  year={2011}
}

@Article{transient,
  author = {R. Singh and P. Sharma and D. Irwin and P. Shenoy and K.K. Ramakrishnan},
  title = {Here {T}oday, {G}one {T}omorrow: Exploiting {T}ransient {S}ervers in {D}ata {C}enters},
  journal = {IEEE Internet Computing},
  month = {July/August},
  year = {2014},
  volume = {18},
  number = {4}
}

@inproceedings{spotcheck,
  title={Spotcheck: Designing a derivative iaas cloud on the spot market},
  author={Prateek Sharma and Stephen Lee and Tian Guo and David Irwin and Prashant Shenoy},
  booktitle={Proceedings of the Tenth European Conference on Computer Systems (EuroSys)},
  year={2015},
  organization={ACM}
}

@InProceedings{yank,
  author = {R. Singh and D. Irwin and P. Shenoy and K.K. Ramakrishnan},
  title = {Yank: Enabling {G}reen {D}ata {C}enters to {P}ull the {P}lug},
  booktitle = {NSDI},
  year = {2013},
  month = {April}
}

@inproceedings{irwin2011towards,
  title={Towards continuous policy-driven demand response in data centers},
  author={Irwin, David and Sharma, Navin and Shenoy, Prashant},
  booktitle={Proceedings of the 2nd ACM SIGCOMM workshop on Green networking},
  pages={19--24},
  year={2011}
}

@article{zhuang2020comprehensive,
  title={A comprehensive survey on transfer learning},
  author={Zhuang, Fuzhen and Qi, Zhiyuan and Duan, Keyu and Xi, Dongbo and Zhu, Yongchun and Zhu, Hengshu and Xiong, Hui and He, Qing},
  journal={Proceedings of the IEEE},
  volume={109},
  number={1},
  pages={43--76},
  year={2020},
  publisher={IEEE}
}

@article{makonin2015nonintrusive,
  title={Nonintrusive load monitoring (NILM) performance evaluation},
  author={Makonin, Stephen and Popowich, Fred},
  journal={Energy Efficiency},
  volume={8},
  number={4},
  pages={809--814},
  year={2015},
  publisher={Springer}
}

@article{zeng_ecosystem_2002,
	title = {{ECOSystem}: {Managing} {Energy} as a {First} {Class} {Operating} {System} {Resource}.},
	abstract = {Energy consumption has recently been widely recognized as a major challenge of computer systems design. This paper explores how to support energy as a first-class operating system resource. Energy, because of its global system nature, presents challenges beyond those of conventional resource management. To"meet these challenges we propose the Currentcy Model that unifies energy accounting over diverse hardware components and enables fair allocation of available energy among applications. Our particular goal is to extend battery lifetime by limiting the average discharge rate and to share this limited resource among competing task according to user preferences. To demonstrate how our framework supports explicit control over the battery resource we implemented ECOSystem, a modified Linux, that incorporates our currentcy model. Experimental results show that ECOSystem accurately accounts for the energy consumed by asynchronous device operation, can achieve a target battery lifetime, and proportionally shares the, limited energy resource among competing tasks.},
	language = {en},
	journal = {ASPLOS},
	author = {Zeng, Heng and Ellis, Carla S and Lebeck, Alvin R and Vahdat, Amin},
	year = {2002},
	pages = {10},
	file = {Zeng et al. - ECOSystem Managing Energy as a First Class Operat.pdf:/home/prateeks/Zotero/storage/CHKGBWF6/Zeng et al. - ECOSystem Managing Energy as a First Class Operat.pdf:application/pdf},
}

@article{zeng_currentcy_2003,
	title = {Currentcy: {A} {Unifying} {Abstraction} for {Expressing} {Energy} {Management} {Policies}},
	abstract = {The global nature of energy creates challenges and opportunities for developing operating system policies to effectively manage energy consumption in batterypowered mobile/wireless devices. The proposed currentcy model creates the framework for the operating system to manage energy as a ﬁrst-class resource. Furthermore, currentcy provides a powerful mechanism to formulate energy goals and to unify resource management policies across diverse competing applications and spanning device components with very different power characteristics.},
	language = {en},
	journal = {USENIX ATC},
	author = {Zeng, Heng and Ellis, Carla S and Lebeck, Alvin R and Vahdat, Amin},
	year = {2003},
	pages = {14},
	file = {Zeng et al. - Currentcy A Unifying Abstraction for Expressing E.pdf:/home/prateeks/Zotero/storage/YABHPL5B/Zeng et al. - Currentcy A Unifying Abstraction for Expressing E.pdf:application/pdf},
}

@article{fonseca_quanto_2008,
	title = {Quanto: {Tracking} {Energy} in {Networked} {Embedded} {Systems}},
	abstract = {We present Quanto, a network-wide time and energy proﬁler for embedded network devices. By combining well-deﬁned interfaces for hardware power states, fast high-resolution energy metering, and causal tracking of programmer-deﬁned activities, Quanto can map how energy and time are spent on nodes and across a network. Implementing Quanto on the TinyOS operating system required modifying under 350 lines of code and adding 1275 new lines. We show that being able to take ﬁnegrained energy consumption measurements as fast as reading a counter allows developers to precisely quantify the effects of low-level system implementation decisions, such as using DMA versus direct bus operations, or the effect of external interference on the power draw of a low duty-cycle radio. Finally, Quanto is lightweight enough that it has a minimal effect on system behavior: each sample takes 100 CPU cycles and 12 bytes of RAM.},
	language = {en},
	journal = {OSDI},
	author = {Fonseca, Rodrigo and Dutta, Prabal and Levis, Philip and Stoica, Ion},
	year = {2008},
	pages = {16},
	file = {Fonseca et al. - Quanto Tracking Energy in Networked Embedded Syst.pdf:/home/prateeks/Zotero/storage/ZQWLLHT9/Fonseca et al. - Quanto Tracking Energy in Networked Embedded Syst.pdf:application/pdf},
}

@article{raghavendra_no_2008,
	title = {No “{Power}” {Struggles}: {Coordinated} {Multi}-level {Power} {Management} for the {Data} {Center}},
	abstract = {Power delivery, electricity consumption, and heat management are becoming key challenges in data center environments. Several past solutions have individually evaluated different techniques to address separate aspects of this problem, in hardware and software, and at local and global levels. Unfortunately, there has been no corresponding work on coordinating all these solutions. In the absence of such coordination, these solutions are likely to interfere with one another, in unpredictable (and potentially dangerous) ways. This paper seeks to address this problem. We make two key contributions. First, we propose and validate a power management solution that coordinates different individual approaches. Using simulations based on 180 server traces from nine different real-world enterprises, we demonstrate the correctness, stability, and efficiency advantages of our solution. Second, using our unified architecture as the base, we perform a detailed quantitative sensitivity analysis and draw conclusions about the impact of different architectures, implementations, workloads, and system design choices.},
	language = {en},
	journal = {ASPLOS},
	author = {Raghavendra, Ramya and Ranganathan, Parthasarathy and Talwar, Vanish and Wang, Zhikui and Zhu, Xiaoyun},
	year = {2008},
	pages = {12},
	file = {Raghavendra et al. - No “Power” Struggles Coordinated Multi-level Powe.pdf:/home/prateeks/Zotero/storage/3W8H5W2F/Raghavendra et al. - No “Power” Struggles Coordinated Multi-level Powe.pdf:application/pdf},
}

@article{harizopoulos_energy_2009,
	title = {Energy {Efficiency}: {The} {New} {Holy} {Grail} of {Data} {Management} {Systems} {Research}},
	abstract = {Energy costs are quickly rising in large-scale data centers and are soon projected to overtake the cost of hardware. As a result, data center operators have recently started turning into using more energy-friendly hardware. Despite the growing body of research in power management techniques, there has been little work to date on energy efficiency from a data management software perspective.},
	language = {en},
	journal = {CIDR},
	author = {Harizopoulos, Stavros and Shah, Mehul A and Meza, Justin and Ranganathan, Parthasarathy},
	year = {2009},
	pages = {8},
	file = {Harizopoulos et al. - 2009 - Energy Efficiency The New Holy Grail of Data Mana.pdf:/home/prateeks/Zotero/storage/7LBCSI7F/Harizopoulos et al. - 2009 - Energy Efficiency The New Holy Grail of Data Mana.pdf:application/pdf},
}

@inproceedings{sorber_eon_2007,
	address = {Sydney, Australia},
	title = {Eon: a language and runtime system for perpetual systems},
	isbn = {978-1-59593-763-6},
	shorttitle = {Eon},
	url = {http://portal.acm.org/citation.cfm?doid=1322263.1322279},
	doi = {10.1145/1322263.1322279},
	abstract = {Embedded systems can operate perpetually without being connected to a power source by harvesting environmental energy from motion, the sun, wind, or heat differentials. However, programming these perpetual systems is challenging. In response to changing energy levels, programmers can adjust the execution frequency of energy-intensive tasks, or provide higher service levels when energy is plentiful and lower service levels when energy is scarce. However, it is often difﬁcult for programmers to predict the energy consumption resulting from these adjustments. Worse, explicit energy management can tie a program to a particular hardware platform, limiting portability.},
	language = {en},
	urldate = {2022-07-08},
	booktitle = {Proceedings of the 5th international conference on {Embedded} networked sensor systems  - {SenSys} '07},
	publisher = {ACM Press},
	author = {Sorber, Jacob and Kostadinov, Alexander and Garber, Matthew and Brennan, Matthew and Corner, Mark D. and Berger, Emery D.},
	year = {2007},
	pages = {161},
	file = {Sorber et al. - 2007 - Eon a language and runtime system for perpetual s.pdf:/home/prateeks/Zotero/storage/WQG9VHFW/Sorber et al. - 2007 - Eon a language and runtime system for perpetual s.pdf:application/pdf},
}

@article{flinn_managing_2004,
	title = {Managing battery lifetime with energy-aware adaptation},
	volume = {22},
	issn = {0734-2071, 1557-7333},
	url = {https://dl.acm.org/doi/10.1145/986533.986534},
	doi = {10.1145/986533.986534},
	abstract = {We demonstrate that a collaborative relationship between the operating system and applications can be used to meet user-specified goals for battery duration. We first describe a novel profiling-based approach for accurately measuring application and system energy consumption. We then show how applications can dynamically modify their behavior to conserve energy. We extend the Linux operating system to yield battery lifetimes of user-specified duration. By monitoring energy supply and demand and by maintaining a history of application energy use, the approach can dynamically balance energy conservation and application quality. Our evaluation shows that this approach can meet goals that extend battery life by as much as 30\%.},
	language = {en},
	number = {2},
	urldate = {2022-07-08},
	journal = {ACM Transactions on Computer Systems},
	author = {Flinn, Jason and Satyanarayanan, M.},
	month = may,
	year = {2004},
	pages = {137--179},
	file = {Flinn and Satyanarayanan - 2004 - Managing battery lifetime with energy-aware adapta.pdf:/home/prateeks/Zotero/storage/4F2U2ZWA/Flinn and Satyanarayanan - 2004 - Managing battery lifetime with energy-aware adapta.pdf:application/pdf},
}

@article{hahnel_measuring_2012,
	title = {Measuring energy consumption for short code paths using {RAPL}},
	volume = {40},
	issn = {0163-5999},
	url = {https://dl.acm.org/doi/10.1145/2425248.2425252},
	doi = {10.1145/2425248.2425252},
	abstract = {Measuring the energy consumption of software components is a major building block for generating models that allow for energy-aware scheduling, accounting and budgeting. Current measurement techniques focus on coarse-grained measurements of application or system events. However, ﬁne grain adjustments in particular in the operating-system kernel and in application-level servers require power proﬁles at the level of a single software function. Until recently, this appeared to be impossible due to the lacking ﬁne grain resolution and high costs of measurement equipment.},
	language = {en},
	number = {3},
	urldate = {2022-04-21},
	journal = {ACM SIGMETRICS Performance Evaluation Review},
	author = {Hähnel, Marcus and Döbel, Björn and Völp, Marcus and Härtig, Hermann},
	month = dec,
	year = {2012},
	pages = {13--17},
	file = {Hähnel et al. - 2012 - Measuring energy consumption for short code paths .pdf:/home/prateeks/Zotero/storage/A98EPQY4/Hähnel et al. - 2012 - Measuring energy consumption for short code paths .pdf:application/pdf},
}

@inproceedings{lebeane_watt_2015,
	title = {Watt {Watcher}: {Fine}-{Grained} {Power} {Estimation} for {Emerging} {Workloads}},
	shorttitle = {Watt {Watcher}},
	doi = {10.1109/SBAC-PAD.2015.26},
	abstract = {Extensive research has focused on estimating power to guide advances in power management schemes, thermal hot spots, and voltage noise. However, simulated power models are slow and struggle with deep software stacks, while direct measurements are typically coarse-grained. This paper introduces Watt Watcher, a multicore power measurement framework that offers fine-grained functional unit breakdowns. Watt Watcher operates by passing event counts and a hardware descriptor file into configurable back-end power models based on McPAT. Researchers and vendors can add other processors to our tool by mapping to the Watt Watcher interface. We show that Watt Watcher, when calibrated, has a MAPE (mean absolute percentage error) of 2.67\% aggregated over all benchmarks when compared to measured power consumption on SPEC CPU 2006 and multithreaded PARSEC benchmarks across three different machines of various form factors and manufacturing processes. We present two use cases showing how Watt Watcher can derive insights that are difficult to obtain through other measurement infrastructures. Additionally, we illustrate how Watt Watcher can be used to provide insights into challenging big data and cloud workloads on a server CPU. Through the use of Watt Watcher, it is possible to obtain a detailed power breakdown on real hardware without vendor proprietary models or hardware instrumentation.},
	booktitle = {2015 27th {International} {Symposium} on {Computer} {Architecture} and {High} {Performance} {Computing} ({SBAC}-{PAD})},
	author = {LeBeane, Michael and Ryoo, Jee Ho and Panda, Reena and John, Lizy Kurian},
	month = oct,
	year = {2015},
	note = {ISSN: 1550-6533},
	keywords = {Monitoring, Hardware, Program processors, Microarchitecture, Power measurement, Power demand, Radiation detectors},
	pages = {106--113},
	file = {IEEE Xplore Abstract Record:/home/prateeks/Zotero/storage/QV8685QV/7379840.html:text/html;IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/83XT356S/LeBeane et al. - 2015 - Watt Watcher Fine-Grained Power Estimation for Em.pdf:application/pdf},
}

@article{hoffmann_dynamic_2011,
	title = {Dynamic knobs for responsive power-aware computing},
	abstract = {We present PowerDial, a system for dynamically adapting application behavior to execute successfully in the face of load and power ﬂuctuations. PowerDial transforms static conﬁguration parameters into dynamic knobs that the PowerDial control system can manipulate to dynamically trade oﬀ the accuracy of the computation in return for reductions in the computational resources that the application requires to produce its results. These reductions translate directly into performance improvements and power savings.},
	language = {en},
	journal = {ASPLOS},
	author = {Hoffmann, Henry and Sidiroglou, Stelios and Carbin, Michael and Misailovic, Sasa and Agarwal, Anant and Rinard, Martin},
	year = {2011},
	pages = {14},
	file = {Hoffmann et al. - Dynamic knobs for responsive power-aware computing.pdf:/home/prateeks/Zotero/storage/LK4W9IDW/Hoffmann et al. - Dynamic knobs for responsive power-aware computing.pdf:application/pdf},
}

@article{stanley-marbell_exploiting_2021,
	title = {Exploiting {Errors} for {Efficiency}: {A} {Survey} from {Circuits} to {Applications}},
	volume = {53},
	issn = {0360-0300, 1557-7341},
	shorttitle = {Exploiting {Errors} for {Efficiency}},
	url = {https://dl.acm.org/doi/10.1145/3394898},
	doi = {10.1145/3394898},
	abstract = {When a computational task tolerates a relaxation of its specification or when an algorithm tolerates the effects of noise in its execution, hardware, system software, and programming language compilers or their runtime systems can trade deviations from correct behavior for lower resource usage. We present, for the first time, a synthesis of research results on computing systems that only make as many errors as their end-to-end applications can tolerate. The results span the disciplines of computer-aided design of circuits, digital system design, computer architecture, programming languages, operating systems, and information theory. Rather than over-provisioning the resources controlled by each of these layers of abstraction to avoid errors, it can be more efficient to exploit the masking of errors occurring at one layer and thereby prevent those errors from propagating to a higher layer.
            We demonstrate the potential benefits of end-to-end approaches using two illustrative examples. We introduce a formalization of terminology that allows us to present a coherent view across the techniques traditionally used by different research communities in their individual layer of focus. Using this formalization, we survey tradeoffs for individual layers of computing systems at the circuit, architecture, operating system, and programming language levels as well as fundamental information-theoretic limits to tradeoffs between resource usage and correctness.},
	language = {en},
	number = {3},
	urldate = {2022-07-08},
	journal = {ACM Computing Surveys},
	author = {Stanley-Marbell, Phillip and Alaghi, Armin and Carbin, Michael and Darulova, Eva and Dolecek, Lara and Gerstlauer, Andreas and Gillani, Ghayoor and Jevdjic, Djordje and Moreau, Thierry and Cacciotti, Mattia and Daglis, Alexandros and Jerger, Natalie Enright and Falsafi, Babak and Misailovic, Sasa and Sampson, Adrian and Zufferey, Damien},
	month = may,
	year = {2021},
	pages = {1--39},
	file = {Stanley-Marbell et al. - 2021 - Exploiting Errors for Efficiency A Survey from Ci.pdf:/home/prateeks/Zotero/storage/D5YAH2MS/Stanley-Marbell et al. - 2021 - Exploiting Errors for Efficiency A Survey from Ci.pdf:application/pdf},
}

@inproceedings{babakol_eflect_2022,
	address = {Pittsburgh Pennsylvania},
	title = {Eflect: porting energy-aware applications to shared environments},
	isbn = {978-1-4503-9221-1},
	shorttitle = {Eflect},
	url = {https://dl.acm.org/doi/10.1145/3510003.3510145},
	doi = {10.1145/3510003.3510145},
	abstract = {Developing energy-aware applications is a well known approach to software-based energy optimization. This promising approach is however faced with a significant hurdle when deployed to the environments shared among multiple applications, where the energy consumption effected by one application may erroneously be observed by another application. We introduce Eflect, a novel software framework for disentangling the energy consumption of co-running applications. Our key idea, called energy virtualization, enables each energy-aware application to be only aware of the energy consumption effected by its execution. Eflect is unique in its lightweight design: it is a purely application-level solution that requires no modification to the underlying hardware or system software. Experiments show Eflect incurs low overhead with high precision. Furthermore, it can seamlessly port existing applicationlevel energy frameworks — one for energy-adaptive approximation and the other for energy profiling — to shared environments while retaining their intended effectiveness.},
	language = {en},
	urldate = {2022-07-08},
	booktitle = {Proceedings of the 44th {International} {Conference} on {Software} {Engineering}},
	publisher = {ACM},
	author = {Babakol, Timur and Canino, Anthony and Liu, Yu David},
	month = may,
	year = {2022},
	pages = {823--834},
	file = {Babakol et al. - 2022 - Eflect porting energy-aware applications to share.pdf:/home/prateeks/Zotero/storage/2SW7T46H/Babakol et al. - 2022 - Eflect porting energy-aware applications to share.pdf:application/pdf},
}

@inproceedings{canino_toward_2019,
	address = {Genova Italy},
	title = {Toward a language design for energy prediction},
	isbn = {978-1-4503-6257-3},
	url = {https://dl.acm.org/doi/10.1145/3328433.3328445},
	doi = {10.1145/3328433.3328445},
	abstract = {Energy-aware programming languages and frameworks seek to improve the energy efficiency of computer systems by taking advantage of application-specific information to perform energy optimizations. Effectively predicting an application’s energy behavior enables more powerful energy optimizations and additional energy management techniques. However, application energy consumption is fundamentally dynamic in nature, which limits the amount of effective energy prediction that can be done ahead of time. To address this challenge, we propose FJP, a predication-aware semantics that takes the estimation process online, and serves to partially predict a program’s energy consumption. The key insight of FJP is that by relaxing the restriction of statically and completely predicting a programs energy consumption, we can dynamically and partially predict energy consumption, desirable for a host of hybrid energy management languages and frameworks. FJP represents a first step toward improving the expressiveness of energy-aware language and framework techniques in its ability for online adaptive energy prediction.},
	language = {en},
	urldate = {2022-07-08},
	booktitle = {Proceedings of the {Conference} {Companion} of the 3rd {International} {Conference} on {Art}, {Science}, and {Engineering} of {Programming}},
	publisher = {ACM},
	author = {Canino, Anthony and Liu, Yu David},
	month = apr,
	year = {2019},
	pages = {1--5},
	file = {Canino and Liu - 2019 - Toward a language design for energy prediction.pdf:/home/prateeks/Zotero/storage/9BU6HWEU/Canino and Liu - 2019 - Toward a language design for energy prediction.pdf:application/pdf},
}

@inproceedings{babakol_calm_2020,
	address = {Virtual Event USA},
	title = {Calm energy accounting for multithreaded {Java} applications},
	isbn = {978-1-4503-7043-1},
	url = {https://dl.acm.org/doi/10.1145/3368089.3409703},
	doi = {10.1145/3368089.3409703},
	abstract = {Energy accounting is a fundamental problem in energy management, defined as attributing global energy consumption to individual components of interest. In this paper, we take on this problem at the application level, where the components for accounting are application logical units, such as methods, classes, and packages. Given a Java application, our novel runtime system Chappie produces an energy footprint, i.e., the relative energy consumption of all programming abstraction units within the application. The design of Chappie is unique in several dimensions. First, relative to targeted energy profiling where the profiler determines the energy consumption of a pre-defined application logical unit, e.g., a specific method, Chappie is total: the energy footprint encompasses all methods within an application. Second, Chappie is concurrency-aware: energy attribution is fully aware of the multithreaded behavior of Java applications, including JVM bookkeeping threads. Third, Chappie is an embodiment of a novel philosophy for application-level energy accounting and profiling, which states that the accounting run should preserve the temporal phased power behavior of the application, and the spatial power distribution among the underlying hardware system. We term this important property as calmness. Against state-of-the-art DaCapo benchmarks, we show that the energy footprint generated by Chappie is precise while incurring negligible overhead. In addition, all results are produced with a high degree of calmness.},
	language = {en},
	urldate = {2022-07-08},
	booktitle = {Proceedings of the 28th {ACM} {Joint} {Meeting} on {European} {Software} {Engineering} {Conference} and {Symposium} on the {Foundations} of {Software} {Engineering}},
	publisher = {ACM},
	author = {Babakol, Timur and Canino, Anthony and Mahmoud, Khaled and Saxena, Rachit and Liu, Yu David},
	month = nov,
	year = {2020},
	pages = {976--988},
	file = {Babakol et al. - 2020 - Calm energy accounting for multithreaded Java appl.pdf:/home/prateeks/Zotero/storage/CQVBAUCH/Babakol et al. - 2020 - Calm energy accounting for multithreaded Java appl.pdf:application/pdf},
}

@inproceedings{flinn_powerscope_1999,
	title = {{PowerScope}: a tool for profiling the energy usage of mobile applications},
	shorttitle = {{PowerScope}},
	doi = {10.1109/MCSA.1999.749272},
	abstract = {We describe the design and implementation of PowerScope, a tool for profiling energy usage by applications. PowerScope maps energy consumption to program structure, in much the same way that CPU profilers map processor cycles to specific processes and procedures. Our approach combines hardware instrumentation to measure current level with kernel software support to perform statistical sampling of system activity. Postprocessing software maps the sample data to program structure and produces a profile of energy usage by process and procedure. Using PowerScope, we have been able to reduce the energy consumption of an adaptive video playing application by 46\%.},
	booktitle = {Proceedings {WMCSA}'99. {Second} {IEEE} {Workshop} on {Mobile} {Computing} {Systems} and {Applications}},
	author = {Flinn, J. and Satyanarayanan, M.},
	month = feb,
	year = {1999},
	keywords = {Application software, Current measurement, Energy consumption, Hardware, Instruments, Kernel, Performance evaluation, Sampling methods, Software measurement, Software performance},
	pages = {2--10},
	file = {IEEE Xplore Abstract Record:/home/prateeks/Zotero/storage/YIE7KIKD/749272.html:text/html;IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/HBELNJQB/Flinn and Satyanarayanan - 1999 - PowerScope a tool for profiling the energy usage .pdf:application/pdf},
}

@article{sinha_jouletrack_2001,
	title = {{JouleTrack} - {A} {Web} {Based} {Tool} for {Software} {Energy} {Profiling}},
	abstract = {A software energy estimation methodology is presented that avoids explicit characterization of instruction energy consumption and predicts energy consumption to within 3\% accuracy for a set of benchmark programs evaluated on the StrongARM SA-1100 and Hitachi SH-4 microprocessors. The tool, JouleTrack, is available as an online resource and has various estimation levels. It also isolates the switching and leakage components of the energy consumption.},
	language = {en},
	journal = {DAC},
	author = {Sinha, Amit and Chandrakasan, Anantha P},
	year = {2001},
	pages = {6},
	file = {Sinha and Chandrakasan - JouleTrack - A Web Based Tool for Software Energy .pdf:/home/prateeks/Zotero/storage/K8MN6IT4/Sinha and Chandrakasan - JouleTrack - A Web Based Tool for Software Energy .pdf:application/pdf},
}

@inproceedings{islam2016new,
  title={A New Perspective on Energy Accounting in {Multi-Tenant} Data Centers},
  author={Islam, Mohammad A and Ren, Shaolei},
  booktitle={USENIX Workshop on Cool Topics on Sustainable Data Centers (CoolDC 16)},
  year={2016}
}

@inproceedings{wang_real-time_2020,
	address = {Virtual Event Japan},
	title = {Real-{Time} {Cooling} {Power} {Attribution} for {Co}-{Located} {Data} {Center} {Rooms} with {Distinct} {Temperatures}},
	isbn = {978-1-4503-8061-4},
	url = {https://dl.acm.org/doi/10.1145/3408308.3427607},
	doi = {10.1145/3408308.3427607},
	abstract = {At present, a co-location data center often applies an identical and low temperature setpoint for its all server rooms. Although increasing the temperature setpoint is a rule-of-thumb approach to reducing the cooling energy usage, the tenants may have different mentalities and technical constraints in accepting higher temperature setpoints. Thus, supporting distinct temperature setpoints is desirable for a co-location data center in pursuing higher energy efficiency. This support calls for a new cooling power attribution scheme to address the inter-room heat transfers that can be up to 9\% of server load as shown in our real experiments. This paper describes our approaches to estimating the inter-room heat transfers, using the estimates to rectify the metered power usages of the rooms’ air handling units, and fairly attributing the power usage of the shared cooling infrastructure (i.e., chiller and cooling tower) to server rooms by following the Shapley value principle. Extensive numeric experiments based on a widely accepted cooling system model are conducted to evaluate the effectiveness of the proposed cooling power attribution scheme.},
	language = {en},
	urldate = {2022-09-11},
	booktitle = {Proceedings of the 7th {ACM} {International} {Conference} on {Systems} for {Energy}-{Efficient} {Buildings}, {Cities}, and {Transportation}},
	publisher = {ACM},
	author = {Wang, Rongrong and Van Le, Duc and Tan, Rui and Wong, Yew-Wah and Wen, Yonggang},
	month = nov,
	year = {2020},
	pages = {190--199},
	file = {Wang et al. - 2020 - Real-Time Cooling Power Attribution for Co-Located.pdf:/home/prateeks/Zotero/storage/8SX6TM89/Wang et al. - 2020 - Real-Time Cooling Power Attribution for Co-Located.pdf:application/pdf},
}

@inproceedings{pathak_fine-grained_2011,
	address = {Salzburg, Austria},
	title = {Fine-grained power modeling for smartphones using system call tracing},
	isbn = {978-1-4503-0634-8},
	url = {http://portal.acm.org/citation.cfm?doid=1966445.1966460},
	doi = {10.1145/1966445.1966460},
	abstract = {Accurate, ﬁne-grained online energy estimation and accounting of mobile devices such as smartphones is of critical importance to understanding and debugging the energy consumption of mobile applications. We observe that stateof-the-art, utilization-based power modeling correlates the (actual) utilization of a hardware component with its power state, and hence is insufﬁcient in capturing several power behavior not directly related to the component utilization in modern smartphones. Such behavior arise due to various low level power optimizations programmed in the device drivers. We propose a new, system-call-based power modeling approach which gracefully encompasses both utilization-based and non-utilization-based power behavior. We present the detailed design of such a power modeling scheme and its implementation on Android and Windows Mobile. Our experimental results using a diverse set of applications conﬁrm that the new model signiﬁcantly improves the ﬁne-grained as well as whole-application energy consumption accuracy. We further demonstrate ﬁne-grained energy accounting enabled by such a ﬁned-grained power model, via a manually implemented eprof, the energy counterpart of the classic gprof tool, for proﬁling application energy drain.},
	language = {en},
	urldate = {2022-07-08},
	booktitle = {Proceedings of the sixth conference on {Computer} systems - {EuroSys} '11},
	publisher = {ACM Press},
	author = {Pathak, Abhinav and Hu, Y. Charlie and Zhang, Ming and Bahl, Paramvir and Wang, Yi-Min},
	year = {2011},
	pages = {153},
	file = {Pathak et al. - 2011 - Fine-grained power modeling for smartphones using .pdf:/home/prateeks/Zotero/storage/CMNCJRP9/Pathak et al. - 2011 - Fine-grained power modeling for smartphones using .pdf:application/pdf},
}

@inproceedings{ghanei_os-based_2016,
	address = {San Francisco Airport CA USA},
	title = {{OS}-based {Resource} {Accounting} for {Asynchronous} {Resource} {Use} in {Mobile} {Systems}},
	isbn = {978-1-4503-4185-1},
	url = {https://dl.acm.org/doi/10.1145/2934583.2934639},
	doi = {10.1145/2934583.2934639},
	abstract = {One essential functionality of a modern operating system is to accurately account for the resource usage of the underlying hardware. This is especially important for computing systems that operate on battery power, since energy management requires accurately attributing resource uses to processes. However, components such as sensors, actuators and specialized network interfaces are often used in an asynchronous fashion, and makes it diﬃcult to conduct accurate resource accounting. For example, a process that makes a request to a sensor may not be running on the processor for the full duration of the resource usage; and current mechanisms of resource accounting fail to provide accurate accounting for such asynchronous uses. This paper proposes a new mechanism to accurately account for the asynchronous usage of resources in mobile systems. Our insight is that by accurately relating the user requests with kernel requests to device and corresponding device responses, we can accurately attribute resource use to the requesting process. Our prototype implemented in Linux demonstrates that we can account for the usage of asynchronous resources such as GPS and WiFi accurately.},
	language = {en},
	urldate = {2022-07-08},
	booktitle = {Proceedings of the 2016 {International} {Symposium} on {Low} {Power} {Electronics} and {Design}},
	publisher = {ACM},
	author = {Ghanei, Farshad and Tipnis, Pranav and Marcus, Kyle and Dantu, Karthik and Ko, Steve and Ziarek, Lukasz},
	month = aug,
	year = {2016},
	pages = {296--301},
	file = {Ghanei et al. - 2016 - OS-based Resource Accounting for Asynchronous Reso.pdf:/home/prateeks/Zotero/storage/KQR4FJYH/Ghanei et al. - 2016 - OS-based Resource Accounting for Asynchronous Reso.pdf:application/pdf},
}

@article{ghanei_os-based_2019,
	title = {{OS}-{Based} {Energy} {Accounting} for {Asynchronous} {Resources} in {IoT} {Devices}},
	volume = {6},
	issn = {2327-4662},
	doi = {10.1109/JIOT.2019.2907668},
	abstract = {Rapid advancements in computing, communication, sensing, and actuation have seen the growth of Internet of Things (IoT) devices in our daily life. One of the fundamental constraints of a typical IoT device is energy as IoT devices rely on a battery. Therefore, it is crucial for their operating system (OS) to be able to accurately account for system-wide energy usage. Specifically, the OS should be able to attribute such accounted energy to the running applications accurately. Traditional OSs have limited capability when it comes to tracking components such as sensors, actuators and network interfaces, as they are often used in an asynchronous fashion. This would make it difficult to conduct energy accounting accurately. This paper proposes a new mechanism to accurately account for the asynchronous energy usage of resources in mobile systems and IoT devices. Our insight is that by accurately relating the application requests with kernel requests to device and corresponding device responses, we can accurately attribute time of use to the requesting process. However, resources such as WiFi reception violate this assumption. In such cases, we can measure usage by the number of bytes in each individual transaction. Using such a hybrid approach, we can account for energy usage with 94\% accuracy and perform much better than using each of these models individually.},
	number = {3},
	journal = {IEEE Internet of Things Journal},
	author = {Ghanei, Farshad and Tipnis, Pranav and Marcus, Kyle and Dantu, Karthik and Ko, Steven Y. and Ziarek, Lukasz},
	month = jun,
	year = {2019},
	note = {Conference Name: IEEE Internet of Things Journal},
	keywords = {Hardware, Mobile handsets, Internet of Things, Internet of Things (IoT), resource management, Kernel, Power demand, Sensors, Batteries, Embedded systems, operating systems (OSs), power management},
	pages = {5841--5852},
	file = {IEEE Xplore Abstract Record:/home/prateeks/Zotero/storage/LSXN6F2S/8674793.html:text/html;IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/UIHZTBT2/Ghanei et al. - 2019 - OS-Based Energy Accounting for Asynchronous Resour.pdf:application/pdf},
}

@inproceedings{dong_rethink_2014,
	address = {Maui Hawaii USA},
	title = {Rethink energy accounting with cooperative game theory},
	isbn = {978-1-4503-2783-1},
	url = {https://dl.acm.org/doi/10.1145/2639108.2639128},
	doi = {10.1145/2639108.2639128},
	abstract = {Energy accounting determines how much a software principal contributes to the total system energy consumption. It is the foundation for evaluating software and for operating system based energy management. While various energy accounting policies have been tried, there is no known way to evaluate them directly simply because it is hard to track all hardware usage by software in a heterogeneous multicore system like modern smartphones and tablets.},
	language = {en},
	urldate = {2022-07-08},
	booktitle = {Proceedings of the 20th annual international conference on {Mobile} computing and networking},
	publisher = {ACM},
	author = {Dong, Mian and Lan, Tian and Zhong, Lin},
	month = sep,
	year = {2014},
	pages = {531--542},
	file = {Dong et al. - 2014 - Rethink energy accounting with cooperative game th.pdf:/home/prateeks/Zotero/storage/NFEITVZA/Dong et al. - 2014 - Rethink energy accounting with cooperative game th.pdf:application/pdf},
}

@inproceedings{canino_proactive_2017,
	address = {Barcelona Spain},
	title = {Proactive and adaptive energy-aware programming with mixed typechecking},
	isbn = {978-1-4503-4988-8},
	url = {https://dl.acm.org/doi/10.1145/3062341.3062356},
	doi = {10.1145/3062341.3062356},
	abstract = {Application-level energy management is an important dimension of energy optimization. In this paper, we introduce ENT, a novel programming language for enabling proactive and adaptive mode-based energy management at the application level. The proactive design allows programmers to apply their application knowledge to energy management, by characterizing the energy behavior of different program fragments with modes. The adaptive design allows such characterization to be delayed until run time, useful for capturing dynamic program behavior dependent on program states, conﬁguration settings, external battery levels, or CPU temperatures. The key insight is both proactiveness and adaptiveness can be uniﬁed under a type system combined with static typing and dynamic typing. ENT has been implemented as an extension to Java, and successfully ported to three energy-conscious platforms: an Intel-based laptop, a Raspberry Pi, and an Android phone. Evaluation shows ENT improves the programmability, debuggability, and energy efﬁciency of battery-aware and temperature-aware programs.},
	language = {en},
	urldate = {2022-07-08},
	booktitle = {Proceedings of the 38th {ACM} {SIGPLAN} {Conference} on {Programming} {Language} {Design} and {Implementation}},
	publisher = {ACM},
	author = {Canino, Anthony and Liu, Yu David},
	month = jun,
	year = {2017},
	pages = {217--232},
	file = {Canino and Liu - 2017 - Proactive and adaptive energy-aware programming wi.pdf:/home/prateeks/Zotero/storage/N5BSTNXT/Canino and Liu - 2017 - Proactive and adaptive energy-aware programming wi.pdf:application/pdf},
}

@inproceedings{leverich_reconciling_2014,
	address = {Amsterdam, The Netherlands},
	title = {Reconciling high server utilization and sub-millisecond quality-of-service},
	isbn = {978-1-4503-2704-6},
	url = {http://dl.acm.org/citation.cfm?doid=2592798.2592821},
	doi = {10.1145/2592798.2592821},
	abstract = {The simplest strategy to guarantee good quality of service (QoS) for a latency-sensitive workload with sub-millisecond latency in a shared cluster environment is to never run other workloads concurrently with it on the same server. Unfortunately, this inevitably leads to low server utilization, reducing both the capability and cost effectiveness of the cluster.},
	language = {en},
	urldate = {2022-07-22},
	booktitle = {Proceedings of the {Ninth} {European} {Conference} on {Computer} {Systems} - {EuroSys} '14},
	publisher = {ACM Press},
	author = {Leverich, Jacob and Kozyrakis, Christos},
	year = {2014},
	pages = {1--14},
	file = {Leverich and Kozyrakis - 2014 - Reconciling high server utilization and sub-millis.pdf:/home/prateeks/Zotero/storage/KGWW9M2I/Leverich and Kozyrakis - 2014 - Reconciling high server utilization and sub-millis.pdf:application/pdf},
}

@article{rotem_power-management_2012,
	title = {Power-{Management} {Architecture} of the {Intel} {Microarchitecture} {Code}-{Named} {Sandy} {Bridge}},
	volume = {32},
	issn = {0272-1732},
	url = {http://ieeexplore.ieee.org/document/6148200/},
	doi = {10.1109/MM.2012.12},
	language = {en},
	number = {2},
	urldate = {2022-07-22},
	journal = {IEEE Micro},
	author = {Rotem, Efraim and Naveh, Alon and Ananthakrishnan, Avinash and Weissmann, Eliezer and Rajwan, Doron},
	month = mar,
	year = {2012},
	pages = {20--27},
	file = {Rotem et al. - 2012 - Power-Management Architecture of the Intel Microar.pdf:/home/prateeks/Zotero/storage/6EA2KTN5/Rotem et al. - 2012 - Power-Management Architecture of the Intel Microar.pdf:application/pdf},
}

@inproceedings{lebeane_watt_2015,
	title = {Watt {Watcher}: {Fine}-{Grained} {Power} {Estimation} for {Emerging} {Workloads}},
	shorttitle = {Watt {Watcher}},
	doi = {10.1109/SBAC-PAD.2015.26},
	abstract = {Extensive research has focused on estimating power to guide advances in power management schemes, thermal hot spots, and voltage noise. However, simulated power models are slow and struggle with deep software stacks, while direct measurements are typically coarse-grained. This paper introduces Watt Watcher, a multicore power measurement framework that offers fine-grained functional unit breakdowns. Watt Watcher operates by passing event counts and a hardware descriptor file into configurable back-end power models based on McPAT. Researchers and vendors can add other processors to our tool by mapping to the Watt Watcher interface. We show that Watt Watcher, when calibrated, has a MAPE (mean absolute percentage error) of 2.67\% aggregated over all benchmarks when compared to measured power consumption on SPEC CPU 2006 and multithreaded PARSEC benchmarks across three different machines of various form factors and manufacturing processes. We present two use cases showing how Watt Watcher can derive insights that are difficult to obtain through other measurement infrastructures. Additionally, we illustrate how Watt Watcher can be used to provide insights into challenging big data and cloud workloads on a server CPU. Through the use of Watt Watcher, it is possible to obtain a detailed power breakdown on real hardware without vendor proprietary models or hardware instrumentation.},
	booktitle = {2015 27th {International} {Symposium} on {Computer} {Architecture} and {High} {Performance} {Computing} ({SBAC}-{PAD})},
	author = {LeBeane, Michael and Ryoo, Jee Ho and Panda, Reena and John, Lizy Kurian},
	month = oct,
	year = {2015},
	note = {ISSN: 1550-6533},
	keywords = {Monitoring, Hardware, Program processors, Microarchitecture, Power measurement, Power demand, Radiation detectors},
	pages = {106--113},
	file = {IEEE Xplore Abstract Record:/home/prateeks/Zotero/storage/QV8685QV/7379840.html:text/html;IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/83XT356S/LeBeane et al. - 2015 - Watt Watcher Fine-Grained Power Estimation for Em.pdf:application/pdf},
}

@article{ge_powerpack_2010,
	title = {{PowerPack}: {Energy} {Profiling} and {Analysis} of {High}-{Performance} {Systems} and {Applications}},
	volume = {21},
	issn = {1558-2183},
	shorttitle = {{PowerPack}},
	doi = {10.1109/TPDS.2009.76},
	abstract = {Energy efficiency is a major concern in modern high-performance computing system design. In the past few years, there has been mounting evidence that power usage limits system scale and computing density, and thus, ultimately system performance. However, despite the impact of power and energy on the computer systems community, few studies provide insight to where and how power is consumed on high-performance systems and applications. In previous work, we designed a framework called PowerPack that was the first tool to isolate the power consumption of devices including disks, memory, NICs, and processors in a high-performance cluster and correlate these measurements to application functions. In this work, we extend our framework to support systems with multicore, multiprocessor-based nodes, and then provide in-depth analyses of the energy consumption of parallel applications on clusters of these systems. These analyses include the impacts of chip multiprocessing on power and energy efficiency, and its interaction with application executions. In addition, we use PowerPack to study the power dynamics and energy efficiencies of dynamic voltage and frequency scaling (DVFS) techniques on clusters. Our experiments reveal conclusively how intelligent DVFS scheduling can enhance system energy efficiency while maintaining performance.},
	number = {5},
	journal = {IEEE Transactions on Parallel and Distributed Systems},
	author = {Ge, Rong and Feng, Xizhou and Song, Shuaiwen and Chang, Hung-Ching and Li, Dong and Cameron, Kirk W.},
	month = may,
	year = {2010},
	note = {Conference Name: IEEE Transactions on Parallel and Distributed Systems},
	keywords = {Application software, CMP-based cluster, Distributed system, dynamic voltage and frequency scaling., Dynamic voltage scaling, Energy consumption, energy efficiency, Energy efficiency, Frequency, Multicore processing, power management, power measurement, Power measurement, Semiconductor device measurement, System analysis and design, System performance, system tools},
	pages = {658--671},
	file = {IEEE Xplore Abstract Record:/home/prateeks/Zotero/storage/KCAHVGM6/4906989.html:text/html;IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/59BEJALJ/Ge et al. - 2010 - PowerPack Energy Profiling and Analysis of High-P.pdf:application/pdf},
}

@article{mukhanov_alea_2017,
	title = {{ALEA}: {A} {Fine}-{Grained} {Energy} {Profiling} {Tool}},
	volume = {14},
	issn = {1544-3566, 1544-3973},
	shorttitle = {{ALEA}},
	url = {https://dl.acm.org/doi/10.1145/3050436},
	doi = {10.1145/3050436},
	abstract = {Energy efficiency is becoming increasingly important, yet few developers understand how source code changes affect the energy and power consumption of their programs. To enable them to achieve energy savings, we must associate energy consumption with software structures, especially at the fine-grained level of functions and loops. Most research in the field relies on direct power/energy measurements taken from on-board sensors or performance counters. However, this coarse granularity does not directly provide the needed fine-grained measurements. This article presents ALEA, a novel fine-grained energy profiling tool based on probabilistic analysis for fine-grained energy accounting. ALEA overcomes the limitations of coarse-grained power-sensing instruments to associate energy information effectively with source code at a fine-grained level. We demonstrate and validate that ALEA can perform accurate energy profiling at various granularity levels on two different architectures: Intel Sandy Bridge and ARM big.LITTLE. ALEA achieves a worst-case error of only 2\% for coarse-grained code structures and 6\% for fine-grained ones, with less than 1\% runtime overhead. Our use cases demonstrate that ALEA supports energy optimizations, with energy savings of up to 2.87 times for a latency-critical option pricing workload under a given power budget.},
	language = {en},
	number = {1},
	urldate = {2022-07-22},
	journal = {ACM Transactions on Architecture and Code Optimization},
	author = {Mukhanov, Lev and Petoumenos, Pavlos and Wang, Zheng and Parasyris, Nikos and Nikolopoulos, Dimitrios S. and De Supinski, Bronis R. and Leather, Hugh},
	month = apr,
	year = {2017},
	pages = {1--25},
	file = {Mukhanov et al. - 2017 - ALEA A Fine-Grained Energy Profiling Tool.pdf:/home/prateeks/Zotero/storage/IAT7BJLF/Mukhanov et al. - 2017 - ALEA A Fine-Grained Energy Profiling Tool.pdf:application/pdf},
}

@inproceedings{choi_roofline_2013,
	title = {A {Roofline} {Model} of {Energy}},
	doi = {10.1109/IPDPS.2013.77},
	abstract = {We describe an energy-based analogue of the time-based roofline model. We create this model from the perspective of algorithm designers and performance tuners, with the intent not of making exact predictions, but rather, developing highlevel analytic insights into the possible relationships among the time, energy, and power costs of an algorithm. The model expresses algorithms in terms of operations, concurrency, and memory traffic; and characterizes the machine based on a small number of simple cost parameters, namely, the time and energy costs per operation or per word of communication. We confirm the basic form of the model experimentally. From this model, we suggest under what conditions we ought to expect an algorithmic time-energy trade-off, and show how algorithm properties may help inform power management.},
	booktitle = {2013 {IEEE} 27th {International} {Symposium} on {Parallel} and {Distributed} {Processing}},
	author = {Choi, Jee Whan and Bedard, Daniel and Fowler, Robert and Vuduc, Richard},
	month = may,
	year = {2013},
	note = {ISSN: 1530-2075},
	keywords = {Algorithm design and analysis, Analytical models, computational intensity, Computational modeling, Current measurement, Graphics processing units, machine balance, performance analysis, power and energy modeling, Power measurement, Prediction algorithms, roofline model},
	pages = {661--672},
	file = {IEEE Xplore Abstract Record:/home/prateeks/Zotero/storage/W2HPJV43/6569852.html:text/html;IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/C6WQR3A4/Choi et al. - 2013 - A Roofline Model of Energy.pdf:application/pdf},
}

@article{lee_cloudsocket_2018,
	title = {{CloudSocket}: {Fine}-{Grained} {Power} {Sensing} {System} for {Datacenters}},
	volume = {6},
	issn = {2169-3536},
	shorttitle = {{CloudSocket}},
	doi = {10.1109/ACCESS.2018.2868469},
	abstract = {Today’s data centers have various computing and storage devices for processing a myriad of data, and they generally consume a considerable amount of electrical energy. This paper proposes a smart grid-inspired methodology to observe and profile the power consumption of a data center. Based on this technique, our paper provides information that is useful for moderating the peak power consumption of the data centers. Our power measurement platform consists of several devices named CloudSockets, and each CloudSocket unit can measure the power consumption of multiple computing nodes and periodically transmit measurement data wirelessly to the coordinator unit. This data can be used to analyze the relationship between the workload and the power consumption of the data center. We tested our methodology through the application of various algorithms with a 32-node distributed system that runs Apache Spark for large-scale data analytics. An analysis of our experimental results reveals how and where the peak power of each node in the grid overlaps, providing opportunities for informed coordination of the computing components for peak power reduction.},
	journal = {IEEE Access},
	author = {Lee, Seil and Kim, Hanjoo and Park, Seongsik and Kim, Seijoon and Choe, Hyeokjun and Yoon, Sungroh},
	year = {2018},
	note = {Conference Name: IEEE Access},
	keywords = {Monitoring, Servers, cloud computing, Machine learning, Smart grids, Power measurement, Power demand, Datacenter, Sensors, smart grid},
	pages = {49601--49610},
	file = {IEEE Xplore Abstract Record:/home/prateeks/Zotero/storage/9M6ZEPLW/8454427.html:text/html;IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/LAH5I5HZ/Lee et al. - 2018 - CloudSocket Fine-Grained Power Sensing System for.pdf:application/pdf},
}

@inproceedings{vergara_sharing_2015,
	address = {Cancun Mexico},
	title = {Sharing the {Cost} of {Lunch}: {Energy} {Apportionment} {Policies}},
	isbn = {978-1-4503-3757-1},
	shorttitle = {Sharing the {Cost} of {Lunch}},
	url = {https://dl.acm.org/doi/10.1145/2815317.2815338},
	doi = {10.1145/2815317.2815338},
	abstract = {Energy consumption has become a hot topic in computer and communication technologies pinpointing the need to carefully analyse system eﬃciency. The energy consumption of a system is determined by the usage patterns of system components and complex interactions between the coexisting entities and resources. Providing transparency of a system’s consumption by breaking down the total consumption is vital to evaluate and provide energy-eﬃcient design and operation.},
	language = {en},
	urldate = {2022-04-11},
	booktitle = {Proceedings of the 11th {ACM} {Symposium} on {QoS} and {Security} for {Wireless} and {Mobile} {Networks}},
	publisher = {ACM},
	author = {Vergara, Ekhiotz Jon and Nadjm-Tehrani, Simin and Asplund, Mikael},
	month = nov,
	year = {2015},
	pages = {91--97},
	file = {Vergara et al. - 2015 - Sharing the Cost of Lunch Energy Apportionment Po.pdf:/home/prateeks/Zotero/storage/3ZYHTEQN/Vergara et al. - 2015 - Sharing the Cost of Lunch Energy Apportionment Po.pdf:application/pdf},
}

@inproceedings{flinn_powerscope_1999,
	title = {{PowerScope}: a tool for profiling the energy usage of mobile applications},
	shorttitle = {{PowerScope}},
	doi = {10.1109/MCSA.1999.749272},
	abstract = {We describe the design and implementation of PowerScope, a tool for profiling energy usage by applications. PowerScope maps energy consumption to program structure, in much the same way that CPU profilers map processor cycles to specific processes and procedures. Our approach combines hardware instrumentation to measure current level with kernel software support to perform statistical sampling of system activity. Postprocessing software maps the sample data to program structure and produces a profile of energy usage by process and procedure. Using PowerScope, we have been able to reduce the energy consumption of an adaptive video playing application by 46\%.},
	booktitle = {Proceedings {WMCSA}'99. {Second} {IEEE} {Workshop} on {Mobile} {Computing} {Systems} and {Applications}},
	author = {Flinn, J. and Satyanarayanan, M.},
	month = feb,
	year = {1999},
	keywords = {Hardware, Performance evaluation, Current measurement, Energy consumption, Instruments, Kernel, Application software, Sampling methods, Software measurement, Software performance},
	pages = {2--10},
	file = {IEEE Xplore Abstract Record:/home/prateeks/Zotero/storage/YIE7KIKD/749272.html:text/html;IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/HBELNJQB/Flinn and Satyanarayanan - 1999 - PowerScope a tool for profiling the energy usage .pdf:application/pdf},
}

@inproceedings{chou_dpm_2019,
	title = {μ{DPM}: {Dynamic} {Power} {Management} for the {Microsecond} {Era}},
	shorttitle = {μ{DPM}},
	doi = {10.1109/HPCA.2019.00032},
	abstract = {The complex, distributed nature of data centers have spawned the adoption of distributed, multi-tiered software architectures, consisting of many inter-connected microservices. These microservices exhibit extremely short request service times, often less than 250μs. We show that these “killer microsecond” service times can cause state-of-the-art dynamic power management techniques to break down, due to short idle period length and low power state transition overheads. In this paper, we propose μDPM, a dynamic power management scheme for the microsecond era that coordinates request delaying, per-core sleep states, and voltage frequency scaling. The idea is to postpone the wake up of a CPU as long as possible and then adjust the frequency so that the tail latency constraint of requests are satisfied just-in-time. μDPM reduces processor energy consumption by up to 32\% and consistently outperforms state-of-the-art techniques by 2×.},
	booktitle = {2019 {IEEE} {International} {Symposium} on {High} {Performance} {Computer} {Architecture} ({HPCA})},
	author = {Chou, Chih-Hsun and Bhuyan, Laxmi N. and Wong, Daniel},
	month = feb,
	year = {2019},
	note = {ISSN: 2378-203X},
	keywords = {Servers, Data centers, Energy consumption, Power demand, Power system management, Market research, DVFS, Dynamic power management, Linux, Sleep states},
	pages = {120--132},
	file = {IEEE Xplore Abstract Record:/home/prateeks/Zotero/storage/3NBWSQES/8675218.html:text/html;IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/LVMDBLL6/Chou et al. - 2019 - μDPM Dynamic Power Management for the Microsecond.pdf:application/pdf},
}

@inproceedings{guo_power_2018,
	address = {Porto Portugal},
	title = {Power sandbox: power awareness redefined},
	isbn = {978-1-4503-5584-1},
	shorttitle = {Power sandbox},
	url = {https://dl.acm.org/doi/10.1145/3190508.3190533},
	doi = {10.1145/3190508.3190533},
	abstract = {Many apps benefit from knowing their power consumption and adapting their behaviors on the fly. To offer apps power knowledge at run time, an OS often meters system power and divides it among apps. Since the impacts of concurrent apps on system power are entangled, this approach not only makes it difficult to reason about power but also results in power side channels, a serious vulnerability. To this end, we introduce a new OS principal called power sandbox, which enables one app to observe the fine-grained power consumption of itself running in its vertical slice of the hardware/software stack. The observed power is insulated from the impacts of other apps. Our contribution is a set of lightweight kernel extensions that simultaneously i) enforce the power sandbox boundaries and ii) confine entailed performance loss to the sandboxed apps. Our experiences on two embedded platforms show that power sandboxes simplify reasoning about power, maintain fairness among apps, and minimize power side channels, thus facilitating construction of power-aware apps.},
	language = {en},
	urldate = {2022-04-11},
	booktitle = {Proceedings of the {Thirteenth} {EuroSys} {Conference}},
	publisher = {ACM},
	author = {Guo, Liwei and Xu, Tiantu and Xu, Mengwei and Liu, Xuanzhe and Lin, Felix Xiaozhu},
	month = apr,
	year = {2018},
	pages = {1--15},
	annote = {- Power sandbox. Security angle/leakage overplayed. Temporary highoverhead container. Useful for sampled fn invoks? 
- Resource balloons. Spatial ballon: no colocation by running dummy-OS tasks. Temporal balloon: no simultaenous inflight I/O, accel reqs. Dummy kernel tasks instead of restricting multiplexing at various kernel subsystems.
- Strange evaluation. Effectiveness not obvious. No comparisons/baselines.
},
	file = {Guo et al. - 2018 - Power sandbox power awareness redefined.pdf:/home/prateeks/Zotero/storage/3W8QGH6R/Guo et al. - 2018 - Power sandbox power awareness redefined.pdf:application/pdf},
}

@article{cai_distilling_2022,
	title = {Distilling the {Real} {Cost} of {Production} {Garbage} {Collectors}},
	abstract = {Despite the long history of garbage collection (GC) and its prevalence in modern programming languages, there is surprisingly little clarity about its true cost. Without understanding their true cost, crucial tradeoffs made by garbage collectors (GCs) often go unnoticed. This can lead to misguided design constraints and evaluation criteria used by GC researchers and users, hindering the development of high-performance, low-cost GCs. In this paper, we develop a methodology that allows us to empirically estimate the absolute cost of GC for any given set of metrics. This fundamental quantification has eluded the research community, even when using modern, well-established methodologies. By distilling out the explicitly identifiable GC cost, we estimate the intrinsic application execution cost using different GCs. The minimum distilled cost forms a baseline. Subtracting this baseline from the total execution costs, we can then place an empirical lower bound on the absolute costs of different GCs. Using this methodology, we study five production GCs in OpenJDK 17, a high-performance Java runtime. We measure the cost of these collectors, and expose their respective key performance tradeoffs. We find that with a modestly sized heap, production GCs incur substantial overheads across a diverse suite of modern benchmarks, spending at least 7–82 \% more wallclock time and 6–92 \% more CPU cycles relative to the baseline cost. We show that these costs can be masked by concurrency and generous provisioning of memory/compute. In addition, we find that newer low-pause GCs are significantly more expensive than older GCs, and, surprisingly, sometimes deliver worse application latency than stop-the-world GCs. Our findings reaffirm that GC is by no means a solved problem and that a low-cost, low-latency GC remains elusive. We recommend adopting the distillation methodology together with a wider range of cost metrics for future GC evaluations. This will not only help the community more comprehensively understand the performance characteristics of different GCs, but also reveal opportunities for future GC optimizations.},
	language = {en},
	journal = {ISPASS},
	author = {Cai, Zixian and Blackburn, Stephen M and Bond, Michael D and Maas, Martin},
	year = {2022},
	pages = {12},
	file = {Cai et al. - Distilling the Real Cost of Production Garbage Col.pdf:/home/prateeks/Zotero/storage/LYLXMYYE/Cai et al. - Distilling the Real Cost of Production Garbage Col.pdf:application/pdf},
}

@misc{acun_carbon_2022,
	title = {Carbon {Explorer}: {A} {Holistic} {Approach} for {Designing} {Carbon} {Aware} {Datacenters}},
	shorttitle = {Carbon {Explorer}},
	url = {http://arxiv.org/abs/2201.10036},
	abstract = {Technology companies have been leading the way to a renewable energy transformation, by investing in renewable energy sources to reduce the carbon footprint of their datacenters. In addition to helping build new solar and wind farms, companies make power purchase agreements or purchase carbon offsets, rather than relying on renewable energy every hour of the day, every day of the week (24/7). Relying on renewable energy 24/7 is challenging due to the intermittent nature of wind and solar energy. Inherent variations in solar and wind energy production causes excess or lack of supply at different times. To cope with the ﬂuctuations of renewable energy generation, multiple solutions must be applied. These include: capacity sizing with a mix of solar and wind power, energy storage options, and carbon aware workload scheduling. However, depending on the region and datacenter workload characteristics, the carbon-optimal solution varies. Existing work in this space does not give a holistic view of the trade-offs of each solution and often ignore the embodied carbon cost of the solutions.},
	language = {en},
	urldate = {2022-09-17},
	publisher = {arXiv},
	author = {Acun, Bilge and Lee, Benjamin and Kazhamiaka, Fiodar and Maeng, Kiwan and Chakkaravarthy, Manoj and Gupta, Udit and Brooks, David and Wu, Carole-Jean},
	month = may,
	year = {2022},
	note = {arXiv:2201.10036 [cs, eess]},
	keywords = {Computer Science - Distributed, Parallel, and Cluster Computing, Electrical Engineering and Systems Science - Systems and Control, B.0, C.0},
	file = {Acun et al. - 2022 - Carbon Explorer A Holistic Approach for Designing.pdf:/home/prateeks/Zotero/storage/IZEXQ8J4/Acun et al. - 2022 - Carbon Explorer A Holistic Approach for Designing.pdf:application/pdf},
}

@article{chien_driving_2021,
	title = {Driving the cloud to true zero carbon},
	volume = {64},
	issn = {0001-0782, 1557-7317},
	url = {https://dl.acm.org/doi/10.1145/3445037},
	doi = {10.1145/3445037},
	language = {en},
	number = {2},
	urldate = {2022-04-11},
	journal = {Communications of the ACM},
	author = {Chien, Andrew A.},
	month = jan,
	year = {2021},
	pages = {5--5},
	file = {Chien - 2021 - Driving the cloud to true zero carbon.pdf:/home/prateeks/Zotero/storage/QA7YNYZ5/Chien - 2021 - Driving the cloud to true zero carbon.pdf:application/pdf},
}

@article{sharma2017design,
  title={Design and operational analysis of a green data center},
  author={Sharma, Prateek and Pegus II, Patrick and Irwin, David and Shenoy, Prashant and Goodhue, John and Culbert, James},
  journal={IEEE Internet Computing},
  volume={21},
  number={4},
  pages={16--24},
  year={2017},
  publisher={IEEE}
}

@article{masanet2020recalibrating,
  title={Recalibrating global data center energy-use estimates},
  author={Masanet, Eric and Shehabi, Arman and Lei, Nuoa and Smith, Sarah and Koomey, Jonathan},
  journal={Science},
  volume={367},
  number={6481},
  pages={984--986},
  year={2020},
  publisher={American Association for the Advancement of Science}
}

@article{acun_holistic_2022,
	title = {A {Holistic} {Approach} for {Designing} {Carbon} {Aware} {Datacenters}},
	url = {http://arxiv.org/abs/2201.10036},
	abstract = {Technology companies have been leading the way to a renewable energy transformation, by investing in renewable energy sources to reduce the carbon footprint of their datacenters. In addition to helping build new solar and wind farms, companies make power purchase agreements or purchase carbon offsets, rather than relying on renewable energy every hour of the day, every day of the week (24/7). Relying on renewable energy 24/7 is challenging due to the intermittent nature of wind and solar energy. Inherent variations in solar and wind energy production causes excess or lack of supply at different times. To cope with the ﬂuctuations of renewable energy generation, multiple solutions must be applied. These include: capacity sizing with a mix of solar and wind power, energy storage options, and carbon aware workload scheduling. However, depending on the region and datacenter workload characteristics, the carbonoptimal solution varies. Existing work in this space does not give a holistic view of the trade-offs of each solution and often ignore the embodied carbon cost of the solutions.},
	language = {en},
	urldate = {2022-04-11},
	journal = {arXiv:2201.10036 [cs, eess]},
	author = {Acun, Bilge and Lee, Benjamin and Maeng, Kiwan and Chakkaravarthy, Manoj and Gupta, Udit and Brooks, David and Wu, Carole-Jean},
	month = jan,
	year = {2022},
	note = {arXiv: 2201.10036},
	keywords = {Computer Science - Distributed, Parallel, and Cluster Computing, Electrical Engineering and Systems Science - Systems and Control, B.0, C.0},
	annote = {- Facebook Carbon explorer: energy provisioning? Pareto analysis. Hyperscale datacenters. Considers battery costs etc 
- Renewables only, vs. R+Scheduling vs. R+batteries for solar-rich locations. 
- Huge variance in renewable. As much as 2.5x 
- Extra capacity + flexible workloads -{\textgreater} most reduction in carbon
},
	file = {Acun et al. - 2022 - A Holistic Approach for Designing Carbon Aware Dat.pdf:/home/prateeks/Zotero/storage/72IUWCCL/Acun et al. - 2022 - A Holistic Approach for Designing Carbon Aware Dat.pdf:application/pdf},
}

@inproceedings{guliani_per-application_2019,
	address = {Dresden Germany},
	title = {Per-{Application} {Power} {Delivery}},
	isbn = {978-1-4503-6281-8},
	url = {https://dl.acm.org/doi/10.1145/3302424.3303981},
	doi = {10.1145/3302424.3303981},
	abstract = {Datacenter servers are often under-provisioned for peak power consumption due to the substantial cost of providing power. When there is insufficient power for the workload, servers can lower voltage and frequency levels to reduce consumption, but at the cost of performance. Current processors provide power limiting mechanisms, but they generally apply uniformly to all CPUs on a chip. For servers running heterogeneous jobs, though, it is necessary to differentiate the power provided to different jobs. This prevents interference when a job may be throttled by another job hitting a power limit. While some recent CPUs support per-CPU power management, there are no clear policies on how to distribute power between applications. Current hardware power limiters, such as Intel’s RAPL throttle the fastest core first, which harms high-priority applications.},
	language = {en},
	urldate = {2022-04-11},
	booktitle = {Proceedings of the {Fourteenth} {EuroSys} {Conference} 2019},
	publisher = {ACM},
	author = {Guliani, Akhil and Swift, Michael M.},
	month = mar,
	year = {2019},
	pages = {1--16},
	file = {Guliani and Swift - 2019 - Per-Application Power Delivery.pdf:/home/prateeks/Zotero/storage/JV3M83X7/Guliani and Swift - 2019 - Per-Application Power Delivery.pdf:application/pdf},
}

@inproceedings{zhang_flex_2021,
	title = {Flex: {High}-{Availability} {Datacenters} {With} {Zero} {Reserved} {Power}},
	shorttitle = {Flex},
	doi = {10.1109/ISCA52012.2021.00033},
	abstract = {Cloud providers, like Amazon and Microsoft, must guarantee high availability for a large fraction of their workloads. For this reason, they build datacenters with redundant infrastructures for power delivery and cooling. Typically, the redundant resources are reserved for use only during infrastructure failure or maintenance events, so that workload performance and availability do not suffer. Unfortunately, the reserved resources also produce lower power utilization and, consequently, require more datacenters to be built. To address these problems, in this paper we propose "zero-reserved-power" datacenters and the Flex system to ensure that workloads still receive their desired performance and availability. Flex leverages the existence of software-redundant workloads that can tolerate lower infrastructure availability, while imposing minimal (if any) performance degradation for those that require high infrastructure availability. Flex mainly comprises (1) a new offline workload placement policy that reduces stranded power while ensuring safety during failure or maintenance events, and (2) a distributed system that monitors for failures and quickly reduces the power draw while respecting the workloads’ requirements, when it detects a failure. Our evaluation shows that Flex produces less than 5\% stranded power and increases the number of deployed servers by up to 33\%, which translates to hundreds of millions of dollars in construction cost savings per datacenter site. We end the paper with lessons from our experience bringing Flex to production in Microsoft’s datacenters.},
	booktitle = {2021 {ACM}/{IEEE} 48th {Annual} {International} {Symposium} on {Computer} {Architecture} ({ISCA})},
	author = {Zhang, Chaojie and Kumbhare, Alok Gautam and Manousakis, Ioannis and Zhang, Deli and Misra, Pulkit A. and Assis, Rod and Woolcock, Kyle and Mahalingam, Nithish and Warrier, Brijesh and Gauthier, David and Kunnath, Lalu and Solomon, Steve and Morales, Osvaldo and Fontoura, Marcus and Bianchini, Ricardo},
	month = jun,
	year = {2021},
	note = {ISSN: 2575-713X},
	keywords = {Maintenance engineering, Production, Dynamic scheduling, Flexible printed circuits, Index Terms—Datacenter power management, power capping, Power system dynamics, Power system management, redundant power, Safety, workload availability},
	pages = {319--332},
	file = {IEEE Xplore Abstract Record:/home/prateeks/Zotero/storage/Z7EX7AF9/9499818.html:text/html;IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/2W543J83/Zhang et al. - 2021 - Flex High-Availability Datacenters With Zero Rese.pdf:application/pdf},
}

@inproceedings{gadepalli_challenges_2019,
	title = {Challenges and {Opportunities} for {Efficient} {Serverless} {Computing} at the {Edge}},
	doi = {10.1109/SRDS47363.2019.00036},
	abstract = {Serverless computing frameworks allow users to execute a small application (dedicated to a specific task) without handling operational issues such as server provisioning, resource management, and resource scaling for the increased load. Serverless computing originally emerged as a Cloud computing framework, but might be a perfect match for IoT data processing at the Edge. However, the existing serverless solutions, based on VMs and containers, are too heavy-weight (large memory footprint and high function invocation time) for operating efficiency and elastic scaling at the Edge. Moreover, many novel IoT applications require low-latency data processing and near real-time responses, which makes the current cloud-based serverless solutions unsuitable. Recently, WebAssembly (Wasm) has been proposed as an alternative method for running serverless applications at near-native speeds, while having a small memory footprint and optimized invocation time. In this paper, we discuss some existing serverless solutions, their design details, and unresolved performance challenges for an efficient serverless management at the Edge. We outline our serverless framework, called aWsm, based on the WebAssembly approach, and discuss the opportunities enabled by the aWsm design, including function profiling and SLO-driven performance management of users' functions. Finally, we present an initial assessment of aWsm performance featuring average startup time (12μs to 30μs) and an economical memory footprint (ranging from 10s to 100s of kB) for a subset of MiBench microbenchmarks used as functions.},
	booktitle = {2019 38th {Symposium} on {Reliable} {Distributed} {Systems} ({SRDS})},
	author = {Gadepalli, Phani Kishore and Peach, Gregor and Cherkasova, Ludmila and Aitken, Rob and Parmer, Gabriel},
	month = oct,
	year = {2019},
	note = {ISSN: 2575-8462},
	keywords = {Cloud computing, Hardware, Virtual machine monitors, Runtime, Containers, Internet of Things, Libraries, Cloud computing, Serverless, FaaS, IoT, Edge computing, WebAssembly, Wasm, performance management, SLOs.},
	pages = {261--2615},
	file = {IEEE Xplore Abstract Record:/home/prateeks/Zotero/storage/QZDGYDT3/9049531.html:text/html;IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/7C9HCK4W/Gadepalli et al. - 2019 - Challenges and Opportunities for Efficient Serverl.pdf:application/pdf},
}

@inproceedings{eilam_towards_2021,
	address = {Virtual Event Canada},
	title = {Towards transparent and trustworthy cloud carbon accounting},
	isbn = {978-1-4503-9192-4},
	url = {https://dl.acm.org/doi/10.1145/3501255.3501408},
	doi = {10.1145/3501255.3501408},
	abstract = {Climate Change is arguably the biggest challenge that humanity faces today. Multiple trends such as the exponential explosion of data transfer, the emergence and popularity of power intensive workloads such as AI, and the flattening of Moore’s law contribute to a rising concern over the increasing carbon footprint cost of digital computation. Any effective strategy to reduce the energy consumption and associated carbon footprint of computations must begin with an accurate and transparent quantification method. However, while most businesses today run a significant portion of their workloads on third party cloud environments, transparent carbon quantification of tenant workloads in cloud environments is lacking. This regretful situation inhibits reliable reporting of Scope 3 Green House Gas (GHG) by cloud users, meaningful comparison of cloud carbon efficiencies, and measurable reduction strategies. In this extended abstract we explain the unique challenges that arise in multi-tenant cloud environments, and propose and discuss an approach, consistent with the GHG Protocol, for cloud carbon footprint quantification. The quantification is a first step towards sustainable cloud environments, that employ dynamic controllers to quantify and reduce the carbon footprint at every layer of the cloud stack.},
	language = {en},
	urldate = {2022-04-11},
	booktitle = {Proceedings of the 22nd {International} {Middleware} {Conference}: {Extended} {Abstracts}},
	publisher = {ACM},
	author = {Eilam, Tamar},
	month = dec,
	year = {2021},
	pages = {1--5},
	file = {Eilam - 2021 - Towards transparent and trustworthy cloud carbon a.pdf:/home/prateeks/Zotero/storage/P4FEXT82/Eilam - 2021 - Towards transparent and trustworthy cloud carbon a.pdf:application/pdf},
}

@inproceedings{zhang_estimating_2020,
	title = {Estimating {Power} {Consumption} of {Containers} and {Virtual} {Machines} in {Data} {Centers}},
	doi = {10.1109/CLUSTER49012.2020.00039},
	abstract = {Virtualization technologies provide solutions of cloud computing. Virtual resource scheduling is a crucial task in data centers, and the power consumption of virtual resources is a critical foundation of virtualization scheduling. Containers are the smallest unit of virtual resource scheduling and migration. Although many effective models for estimating power consumption of virtual machines (VM) have been proposed, few power estimation models of containers have been put forth. In this paper, we offer a fast-training piecewise regression model based on decision tree to build a VM power estimation model and estimate the containers' power by treating the container as a group of processes on the VM. In our model, we characterize the nonlinear relationship between power and features and realize the effective estimation of the containers on the VM. We evaluate the proposed model on 13 workloads in PARSEC and compare it with several models. The experimental results prove the effectiveness of our proposed model on most workloads. Moreover, the estimated power of the containers is in line with expectations.},
	booktitle = {2020 {IEEE} {International} {Conference} on {Cluster} {Computing} ({CLUSTER})},
	author = {Zhang, Xusheng and Shen, Ziyu and Xia, Bin and Liu, Zheng and Li, Yun},
	month = sep,
	year = {2020},
	note = {ISSN: 2168-9253},
	keywords = {Data models, virtual machines, Virtualization, Virtual machining, Estimation, Containers, Processor scheduling, containers, Power demand, data centers, power estimation},
	pages = {288--293},
	file = {IEEE Xplore Abstract Record:/home/prateeks/Zotero/storage/QYUIRLW9/9229581.html:text/html;IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/6G9MX5XF/Zhang et al. - 2020 - Estimating Power Consumption of Containers and Vir.pdf:application/pdf},
}

@article{colmant_next_2018,
	title = {The next 700 {CPU} power models},
	volume = {144},
	issn = {01641212},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0164121218301377},
	doi = {10.1016/j.jss.2018.07.001},
	abstract = {Software power estimation of CPUs is a central concern for energy eﬃciency and resource management in data centers. Over the last few years, a dozen of ad hoc power models have been proposed to cope with the wide diversity and the growing complexity of modern CPU architectures. However, most of these CPU power models rely on a thorough expertise of the targeted architectures, thus leading to the design of hardware-speciﬁc solutions that can hardly be ported beyond the initial settings. In this article, we rather propose a novel toolkit that uses a conﬁgurable/interchangeable learning technique to automatically learn the power model of a CPU, independently of the features and the complexity it exhibits. In particular, our learning approach automatically explores the space of hardware performance counters made available by a given CPU to isolate the ones that are best correlated to the power consumption of the host, and then infers a power model from the selected counters. Based on a middleware toolkit devoted to the implementation of software-deﬁned power meters, we implement the proposed approach to generate CPU power models for a wide diversity of CPU architectures (including Intel, ARM, and AMD processors), and using a large variety of both CPU and memoryintensive workloads. We show that the CPU power models generated by our middleware toolkit estimate the power consumption of the whole CPU or individual processes with an accuracy of 98.5\% on average, thus competing with the state-of-the-art power models.},
	language = {en},
	urldate = {2022-04-11},
	journal = {Journal of Systems and Software},
	author = {Colmant, Maxime and Rouvoy, Romain and Kurpicz, Mascha and Sobe, Anita and Felber, Pascal and Seinturier, Lionel},
	month = oct,
	year = {2018},
	pages = {382--396},
	file = {Colmant et al. - 2018 - The next 700 CPU power models.pdf:/home/prateeks/Zotero/storage/SJWFFQ4G/Colmant et al. - 2018 - The next 700 CPU power models.pdf:application/pdf},
}

@inproceedings{dodge_measuring_2022,
	address = {Seoul Republic of Korea},
	title = {Measuring the {Carbon} {Intensity} of {AI} in {Cloud} {Instances}},
	isbn = {978-1-4503-9352-2},
	url = {https://dl.acm.org/doi/10.1145/3531146.3533234},
	doi = {10.1145/3531146.3533234},
	language = {en},
	urldate = {2022-09-30},
	booktitle = {2022 {ACM} {Conference} on {Fairness}, {Accountability}, and {Transparency}},
	publisher = {ACM},
	author = {Dodge, Jesse and Prewitt, Taylor and Tachet des Combes, Remi and Odmark, Erika and Schwartz, Roy and Strubell, Emma and Luccioni, Alexandra Sasha and Smith, Noah A. and DeCario, Nicole and Buchanan, Will},
	month = jun,
	year = {2022},
	pages = {1877--1894},
	file = {Full Text:/home/prateeks/Zotero/storage/FHVYNU4D/Dodge et al. - 2022 - Measuring the Carbon Intensity of AI in Cloud Inst.pdf:application/pdf},
}

@article{schwartz_green_2020,
	title = {Green {AI}},
	volume = {63},
	issn = {0001-0782, 1557-7317},
	url = {https://dl.acm.org/doi/10.1145/3381831},
	doi = {10.1145/3381831},
	abstract = {Creating efficiency in AI research will decrease its carbon footprint and increase its inclusivity as deep learning study should not require the deepest pockets.},
	language = {en},
	number = {12},
	urldate = {2022-09-30},
	journal = {Communications of the ACM},
	author = {Schwartz, Roy and Dodge, Jesse and Smith, Noah A. and Etzioni, Oren},
	month = nov,
	year = {2020},
	pages = {54--63},
	file = {Schwartz et al. - 2020 - Green AI.pdf:/home/prateeks/Zotero/storage/49FLG5XV/Schwartz et al. - 2020 - Green AI.pdf:application/pdf},
}

@article{ge_powerpack_2010,
	title = {{PowerPack}: {Energy} {Profiling} and {Analysis} of {High}-{Performance} {Systems} and {Applications}},
	volume = {21},
	issn = {1558-2183},
	shorttitle = {{PowerPack}},
	doi = {10.1109/TPDS.2009.76},
	abstract = {Energy efficiency is a major concern in modern high-performance computing system design. In the past few years, there has been mounting evidence that power usage limits system scale and computing density, and thus, ultimately system performance. However, despite the impact of power and energy on the computer systems community, few studies provide insight to where and how power is consumed on high-performance systems and applications. In previous work, we designed a framework called PowerPack that was the first tool to isolate the power consumption of devices including disks, memory, NICs, and processors in a high-performance cluster and correlate these measurements to application functions. In this work, we extend our framework to support systems with multicore, multiprocessor-based nodes, and then provide in-depth analyses of the energy consumption of parallel applications on clusters of these systems. These analyses include the impacts of chip multiprocessing on power and energy efficiency, and its interaction with application executions. In addition, we use PowerPack to study the power dynamics and energy efficiencies of dynamic voltage and frequency scaling (DVFS) techniques on clusters. Our experiments reveal conclusively how intelligent DVFS scheduling can enhance system energy efficiency while maintaining performance.},
	number = {5},
	journal = {IEEE Transactions on Parallel and Distributed Systems},
	author = {Ge, Rong and Feng, Xizhou and Song, Shuaiwen and Chang, Hung-Ching and Li, Dong and Cameron, Kirk W.},
	month = may,
	year = {2010},
	note = {Conference Name: IEEE Transactions on Parallel and Distributed Systems},
	keywords = {Application software, CMP-based cluster, Distributed system, dynamic voltage and frequency scaling., Dynamic voltage scaling, Energy consumption, energy efficiency, Energy efficiency, Frequency, Multicore processing, power management, power measurement, Power measurement, Semiconductor device measurement, System analysis and design, System performance, system tools},
	pages = {658--671},
	file = {IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/4US43CJH/Ge et al. - 2010 - PowerPack Energy Profiling and Analysis of High-P.pdf:application/pdf},
}

@article{dichev_power_2022,
	title = {Power {Log}’n’{Roll}: {Power}-{Efficient} {Localized} {Rollback} for {MPI} {Applications} {Using} {Message} {Logging} {Protocols}},
	volume = {33},
	issn = {1558-2183},
	shorttitle = {Power {Log}’n’{Roll}},
	doi = {10.1109/TPDS.2021.3107745},
	abstract = {In fault tolerance for parallel and distributed systems, message logging protocols have played a prominent role in the last three decades. Such protocols enable local rollback to provide recovery from fail-stop errors. Global rollback techniques can be straightforward to implement but at times lead to slower recovery than local rollback. Local rollback is more complicated but can offer faster recovery times. In this work, we study the power and energy efficiency implications of global and local rollback. We propose a power-efficient version of local rollback to reduce power consumption for non-critical, blocked processes, using Dynamic Voltage and Frequency Scaling (DVFS) and clock modulation (CM). Our results for 3 different MPI codes on 2 parallel systems show that power-efficient local rollback reduces CPU energy waste up to 50\% during the recovery phase, compared to existing global and local rollback techniques, without introducing significant overheads. Furthermore, we show that savings manifest for all blocked processes, which grow linearly with the process count. We estimate that for settings with high recovery overheads the total energy waste of parallel codes is reduced with the proposed local rollback.},
	number = {6},
	journal = {IEEE Transactions on Parallel and Distributed Systems},
	author = {Dichev, Kiril and De Sensi, Daniele and Nikolopoulos, Dimitrios S. and Cameron, Kirk W. and Spence, Ivor},
	month = jun,
	year = {2022},
	note = {Conference Name: IEEE Transactions on Parallel and Distributed Systems},
	keywords = {fail-stop errors, Fault tolerance, Fault tolerant systems, local rollback, message logging, MPI, Payloads, power/energy savings, Protocols, Resilience, Runtime, Topology},
	pages = {1276--1288},
	file = {IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/7E8ERRB9/Dichev et al. - 2022 - Power Log’n’Roll Power-Efficient Localized Rollba.pdf:application/pdf},
}

@article{zoha_non-intrusive_2012,
	title = {Non-{Intrusive} {Load} {Monitoring} {Approaches} for {Disaggregated} {Energy} {Sensing}: {A} {Survey}},
	volume = {12},
	issn = {1424-8220},
	shorttitle = {Non-{Intrusive} {Load} {Monitoring} {Approaches} for {Disaggregated} {Energy} {Sensing}},
	url = {http://www.mdpi.com/1424-8220/12/12/16838},
	doi = {10.3390/s121216838},
	abstract = {Appliance Load Monitoring (ALM) is essential for energy management solutions, allowing them to obtain appliance-speciﬁc energy consumption statistics that can further be used to devise load scheduling strategies for optimal energy utilization. Fine-grained energy monitoring can be achieved by deploying smart power outlets on every device of interest; however it incurs extra hardware cost and installation complexity. Non-Intrusive Load Monitoring (NILM) is an attractive method for energy disaggregation, as it can discern devices from the aggregated data acquired from a single point of measurement. This paper provides a comprehensive overview of NILM system and its associated methods and techniques used for disaggregated energy sensing. We review the state-of-the art load signatures and disaggregation algorithms used for appliance recognition and highlight challenges and future research directions.},
	language = {en},
	number = {12},
	urldate = {2022-09-30},
	journal = {Sensors},
	author = {Zoha, Ahmed and Gluhak, Alexander and Imran, Muhammad and Rajasegarar, Sutharshan},
	month = dec,
	year = {2012},
	pages = {16838--16866},
	file = {Zoha et al. - 2012 - Non-Intrusive Load Monitoring Approaches for Disag.pdf:/home/prateeks/Zotero/storage/K77DEA5G/Zoha et al. - 2012 - Non-Intrusive Load Monitoring Approaches for Disag.pdf:application/pdf},
}

@inproceedings{kelly_neural_2015,
	address = {Seoul South Korea},
	title = {Neural {NILM}: {Deep} {Neural} {Networks} {Applied} to {Energy} {Disaggregation}},
	isbn = {978-1-4503-3981-0},
	shorttitle = {Neural {NILM}},
	url = {https://dl.acm.org/doi/10.1145/2821650.2821672},
	doi = {10.1145/2821650.2821672},
	abstract = {Energy disaggregation estimates appliance-by-appliance electricity consumption from a single meter that measures the whole home’s electricity demand. Recently, deep neural networks have driven remarkable improvements in classiﬁcation performance in neighbouring machine learning ﬁelds such as image classiﬁcation and automatic speech recognition. In this paper, we adapt three deep neural network architectures to energy disaggregation: 1) a form of recurrent neural network called ‘long short-term memory’ (LSTM); 2) denoising autoencoders; and 3) a network which regresses the start time, end time and average power demand of each appliance activation. We use seven metrics to test the performance of these algorithms on real aggregate power data from ﬁve appliances. Tests are performed against a house not seen during training and against houses seen during training. We ﬁnd that all three neural nets achieve better F1 scores (averaged over all ﬁve appliances) than either combinatorial optimisation or factorial hidden Markov models and that our neural net algorithms generalise well to an unseen house.},
	language = {en},
	urldate = {2022-09-30},
	booktitle = {Proceedings of the 2nd {ACM} {International} {Conference} on {Embedded} {Systems} for {Energy}-{Efficient} {Built} {Environments}},
	publisher = {ACM},
	author = {Kelly, Jack and Knottenbelt, William},
	month = nov,
	year = {2015},
	pages = {55--64},
	file = {Kelly and Knottenbelt - 2015 - Neural NILM Deep Neural Networks Applied to Energ.pdf:/home/prateeks/Zotero/storage/KDUQ4SQU/Kelly and Knottenbelt - 2015 - Neural NILM Deep Neural Networks Applied to Energ.pdf:application/pdf},
}

@article{tang_nipd_2017,
	title = {{NIPD}: {Non}-{Intrusive} {Power} {Disaggregation} in {Legacy} {Datacenters}},
	volume = {66},
	issn = {1557-9956},
	shorttitle = {{NIPD}},
	doi = {10.1109/TC.2016.2582163},
	abstract = {Fine-grained power monitoring, which refers to power monitoring at the server level, is critical to the efficient operation and energy saving of datacenters. Fined-grained power monitoring, however, is extremely challenging in legacy datacenters that host server systems not equipped with power monitoring sensors. Installing power monitoring hardware at the server level not only incurs high costs but also complicates the maintenance of high-density server clusters and enclosures. In this paper, we present a zero-cost, purely software-based solution to this challenging problem. We use a novel technique of non-intrusive power disaggregation (NIPD) that establishes power mapping functions (PMFs) between the states of servers and their power consumption, and infer the power consumption of each server with the aggregated power of the entire datacenter. The PMFs that we have developed can support both linear and nonlinear power models via the state feature transformation. To reduce the training overhead, we further develop adaptive PMFs update strategies and ensure that the training data and state features are appropriately selected. We implement and evaluate NIPD over a real-world datacenter with 326 nodes. The results show that our solution can provide high precision power estimation at both rack level and server level. In specific, with PMFs including only two nonlinear terms, our power estimation i) at rack level has mean relative error of 2.18 percent, and ii) at server level has mean relative errors of 9.61 and 7.53 percent corresponding to the idle and peak power, respectively.},
	number = {2},
	journal = {IEEE Transactions on Computers},
	author = {Tang, Guoming and Jiang, Weixiang and Xu, Zhifeng and Liu, Fangming and Wu, Kui},
	month = feb,
	year = {2017},
	note = {Conference Name: IEEE Transactions on Computers},
	keywords = {Monitoring, Hardware, Servers, Training, Power measurement, Power demand, Datacenter, Sensors, non-intrusive power disaggregation, power monitoring, servers},
	pages = {312--325},
	file = {IEEE Xplore Abstract Record:/home/prateeks/Zotero/storage/I8YCCC3Y/7494629.html:text/html;IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/VGVEFXTD/Tang et al. - 2017 - NIPD Non-Intrusive Power Disaggregation in Legacy.pdf:application/pdf},
}

@inproceedings{jiang_non-it_2018,
	address = {Vienna},
	title = {Non-{IT} {Energy} {Accounting} in {Virtualized} {Datacenter}},
	isbn = {978-1-5386-6871-9},
	url = {https://ieeexplore.ieee.org/document/8416301/},
	doi = {10.1109/ICDCS.2018.00038},
	abstract = {Energy accounting plays a crucial role in datacenter energy management, wherein the energy consumption of nonIT units (e.g., UPS and cooling system) makes up a signiﬁcant portion. However, it is challenging to fairly account for non-IT energy on an individual VM basis, because the non-IT units are shared by multiple VMs in a virtualized datacenter and only the system-level non-IT energy consumption can be measured. Existing policies, e.g., equally or proportionally allocating nonIT energy to VMs based on their IT energy, are not fair, in the sense that they can not satisfy a set of desired axiomatic principles of fair allocation. In this paper, we propose LEAPS, a Lightweight Energy Accounting Policy based on a provably fair methodology called Shapley value. We evaluate it using real-world datacenter trace and demonstrate that, compared to original Shapley value approach that has an exponential complexity, LEAPS yields almost the same energy accounting result within a maximum relative error less than 6.97\%, while having a negligible computation time.},
	language = {en},
	urldate = {2022-09-11},
	booktitle = {2018 {IEEE} 38th {International} {Conference} on {Distributed} {Computing} {Systems} ({ICDCS})},
	publisher = {IEEE},
	author = {Jiang, Weixiang and Ren, Shaolei and Liu, Fangming and Jin, Hai},
	month = jul,
	year = {2018},
	pages = {300--310},
	file = {Jiang et al. - 2018 - Non-IT Energy Accounting in Virtualized Datacenter.pdf:/home/prateeks/Zotero/storage/T5JKQA9B/Jiang et al. - 2018 - Non-IT Energy Accounting in Virtualized Datacenter.pdf:application/pdf},
}

@article{kolter_energy_2010,
	title = {Energy {Disaggregation} via {Discriminative} {Sparse} {Coding}},
	abstract = {Energy disaggregation is the task of taking a whole-home energy signal and separating it into its component appliances. Studies have shown that having devicelevel energy information can cause users to conserve signiﬁcant amounts of energy, but current electricity meters only report whole-home data. Thus, developing algorithmic methods for disaggregation presents a key technical challenge in the effort to maximize energy conservation. In this paper, we examine a large scale energy disaggregation task, and apply a novel extension of sparse coding to this problem. In particular, we develop a method, based upon structured prediction, for discriminatively training sparse coding algorithms speciﬁcally to maximize disaggregation performance. We show that this signiﬁcantly improves the performance of sparse coding algorithms on the energy task and illustrate how these disaggregation results can provide useful information about energy usage.},
	language = {en},
	journal = {Neurips},
	author = {Kolter, J Z and Batra, Siddharth and Ng, Andrew Y},
	year = {2010},
	pages = {9},
	file = {Kolter et al. - Energy Disaggregation via Discriminative Sparse Co.pdf:/home/prateeks/Zotero/storage/FUJ4887F/Kolter et al. - Energy Disaggregation via Discriminative Sparse Co.pdf:application/pdf},
}

@inproceedings{dong_rethink_2014,
	address = {Maui Hawaii USA},
	title = {Rethink energy accounting with cooperative game theory},
	isbn = {978-1-4503-2783-1},
	url = {https://dl.acm.org/doi/10.1145/2639108.2639128},
	doi = {10.1145/2639108.2639128},
	abstract = {Energy accounting determines how much a software principal contributes to the total system energy consumption. It is the foundation for evaluating software and for operating system based energy management. While various energy accounting policies have been tried, there is no known way to evaluate them directly simply because it is hard to track all hardware usage by software in a heterogeneous multicore system like modern smartphones and tablets.},
	language = {en},
	urldate = {2022-09-30},
	booktitle = {Proceedings of the 20th annual international conference on {Mobile} computing and networking},
	publisher = {ACM},
	author = {Dong, Mian and Lan, Tian and Zhong, Lin},
	month = sep,
	year = {2014},
	pages = {531--542},
	file = {Dong et al. - 2014 - Rethink energy accounting with cooperative game th.pdf:/home/prateeks/Zotero/storage/4X9DB6K4/Dong et al. - 2014 - Rethink energy accounting with cooperative game th.pdf:application/pdf},
}

@inproceedings{jiang_virtual_2017,
	address = {Atlanta, GA, USA},
	title = {Virtual {Machine} {Power} {Accounting} with {Shapley} {Value}},
	isbn = {978-1-5386-1792-2},
	url = {http://ieeexplore.ieee.org/document/7980105/},
	doi = {10.1109/ICDCS.2017.235},
	abstract = {The ever-increasing power consumption of datacenters has eaten up a large portion of their proﬁt. One possible solution is to charge datacenter users for their actual power usage. However, it poses a great technical challenge as the power of VMs co-existing in a physical machine cannot be measured directly. It is thus critical to develop a fair method to disaggregate the power of a physical machine to individual VMs. We tackle the above challenge by modeling the power disaggregation problem as a cooperative game and propose non-deterministic Shapley value to discover the fair power share of VMs (in the sense of satisfying four desired axiomatic principles), while compensating the negative impact of VM power variation. We demonstrate that the results from existing power model-based solution can deviate from the “ground truth” by 25.22\% ⇠ 46.15\%. And compared with the exact Shapley value, our non-deterministic Shapley value can achieve less than 5\% error for 90\% of the time.},
	language = {en},
	urldate = {2022-09-11},
	booktitle = {2017 {IEEE} 37th {International} {Conference} on {Distributed} {Computing} {Systems} ({ICDCS})},
	publisher = {IEEE},
	author = {Jiang, Weixiang and Liu, Fangming and Tang, Guoming and Wu, Kui and Jin, Hai},
	month = jun,
	year = {2017},
	pages = {1683--1693},
	file = {Jiang et al. - 2017 - Virtual Machine Power Accounting with Shapley Valu.pdf:/home/prateeks/Zotero/storage/B72J6W78/Jiang et al. - 2017 - Virtual Machine Power Accounting with Shapley Valu.pdf:application/pdf},
}

@inproceedings{cremers_efficient_2022,
	address = {Virtual Event},
	title = {Efficient methods for approximating the shapley value for asset sharing in energy communities},
	isbn = {978-1-4503-9397-3},
	url = {https://dl.acm.org/doi/10.1145/3538637.3538861},
	doi = {10.1145/3538637.3538861},
	abstract = {With the emergence of energy communities, where a number of prosumers invest in shared renewable generation capacity and battery storage, the issue of fair allocation of benefits and costs has become increasingly important. The Shapley value has attracted increasing interest for redistribution in energy settings - however, computing it exactly is intractable beyond a few dozen prosumers. In this paper, we examine a number of methods for approximating the Shapley value in realistic community energy settings, and propose a new one. To compare the performances of these methods, we also design a novel method to compute the Shapley value exactly, for communities of up to several hundred agents by clustering consumers into a smaller number of demand profiles. We compare the methods in a large-scale case study of a community of up to 200 household consumers in the UK, and show that our method can achieve very close redistribution to the exact Shapley values but at a much lower (and practically feasible) computation cost.},
	language = {en},
	urldate = {2022-09-11},
	booktitle = {Proceedings of the {Thirteenth} {ACM} {International} {Conference} on {Future} {Energy} {Systems}},
	publisher = {ACM},
	author = {Cremers, Sho and Robu, Valentin and Hofman, Daan and Naber, Titus and Zheng, Kawin and Norbu, Sonam},
	month = jun,
	year = {2022},
	pages = {320--324},
	file = {Cremers et al. - 2022 - Efficient methods for approximating the shapley va.pdf:/home/prateeks/Zotero/storage/P8AXK3YK/Cremers et al. - 2022 - Efficient methods for approximating the shapley va.pdf:application/pdf},
}

@article{khan_rapl_2018,
	title = {{RAPL} in {Action}: {Experiences} in {Using} {RAPL} for {Power} {Measurements}},
	volume = {3},
	issn = {2376-3639, 2376-3647},
	shorttitle = {{RAPL} in {Action}},
	url = {https://dl.acm.org/doi/10.1145/3177754},
	doi = {10.1145/3177754},
	abstract = {To improve energy efficiency and comply with the power budgets, it is important to be able to measure the power consumption of cloud computing servers. Intel’s Running Average Power Limit (RAPL) interface is a powerful tool for this purpose. RAPL provides power limiting features and accurate energy readings for CPUs and DRAM, which are easily accessible through different interfaces on large distributed computing systems. Since its introduction, RAPL has been used extensively in power measurement and modeling. However, the advantages and disadvantages of RAPL have not been well investigated yet. To fill this gap, we conduct a series of experiments to disclose the underlying strengths and weaknesses of the RAPL interface by using both customized microbenchmarks and three well-known application level benchmarks:
              Stream
              ,
              Stress-ng
              , and
              ParFullCMS
              . Moreover, to make the analysis as realistic as possible, we leverage two production-level power measurement datasets from the
              Taito
              , a supercomputing cluster of the Finnish Center of Scientific Computing and also replicate our experiments on Amazon EC2. Our results illustrate different aspects of RAPL and document the findings through comprehensive analysis. Our observations reveal that RAPL readings are highly correlated with plug power, promisingly accurate enough, and have negligible performance overhead. Experimental results suggest RAPL can be a very useful tool to measure and monitor the energy consumption of servers without deploying any complex power meters. We also show that there are still some open issues, such as driver support, non-atomicity of register updates, and unpredictable timings that might weaken the usability of RAPL in certain scenarios. For such scenarios, we pinpoint solutions and workarounds.},
	language = {en},
	number = {2},
	urldate = {2022-07-15},
	journal = {ACM Transactions on Modeling and Performance Evaluation of Computing Systems},
	author = {Khan, Kashif Nizam and Hirki, Mikael and Niemi, Tapio and Nurminen, Jukka K. and Ou, Zhonghong},
	month = jun,
	year = {2018},
	pages = {1--26},
	file = {Khan et al. - 2018 - RAPL in Action Experiences in Using RAPL for Powe.pdf:/home/prateeks/Zotero/storage/AAT77N75/Khan et al. - 2018 - RAPL in Action Experiences in Using RAPL for Powe.pdf:application/pdf},
}

@inproceedings{hackenberg_energy_2015,
	title = {An {Energy} {Efficiency} {Feature} {Survey} of the {Intel} {Haswell} {Processor}},
	doi = {10.1109/IPDPSW.2015.70},
	abstract = {The recently introduced Intel Xeon E5-1600 v3 and E5-2600 v3 series processors – codenamed Haswell-EP – implement major changes compared to their predecessors. Among these changes are integrated voltage regulators that enable individual voltages and frequencies for every core. In this paper we analyze a number of consequences of this development that are of utmost importance for energy efficiency optimization strategies such as dynamic voltage and frequency scaling (DVFS) and dynamic concurrency throttling (DCT). This includes the enhanced RAPL implementation and its improved accuracy as it moves from modeling to actual measurement. Another fundamental change is that every clock speed above AVX frequency – including nominal frequency – is opportunistic and unreliable, which vastly decreases performance predictability with potential effects on scalability. Moreover, we characterize significantly changed p-state transition behavior, and determine crucial memory performance data.},
	booktitle = {2015 {IEEE} {International} {Parallel} and {Distributed} {Processing} {Symposium} {Workshop}},
	author = {Hackenberg, Daniel and Schöne, Robert and Ilsche, Thomas and Molka, Daniel and Schuchart, Joseph and Geyer, Robin},
	month = may,
	year = {2015},
	keywords = {Benchmark testing, Random access memory, Power demand, Energy measurement, Voltage control, Regulators, Frequency measurement},
	pages = {896--904},
	file = {IEEE Xplore Abstract Record:/home/prateeks/Zotero/storage/MMXT2VP3/7284406.html:text/html;IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/EMEIZSUV/Hackenberg et al. - 2015 - An Energy Efficiency Feature Survey of the Intel H.pdf:application/pdf},
}

@article{anand_hotcarbon22,
title={{The Odd One Out: Energy is not like Other Metrics}},
author = {Anand, Vaastav and Xie, Zhiqiang and Stolet, Matheus and De Viti, Roberta and Davidson, Thomas and  Karimipour, Reyhaneh and  Alzayat, Safya and Mace,  Jonathan},
    journal={HotCarbon 2022: 1st Workshop on Sustainable Computer Systems Design and Implementation},
year={2022},
month={July}
}

@inproceedings{babakol_calm_2020,
	address = {Virtual Event USA},
	title = {Calm energy accounting for multithreaded {Java} applications},
	isbn = {978-1-4503-7043-1},
	url = {https://dl.acm.org/doi/10.1145/3368089.3409703},
	doi = {10.1145/3368089.3409703},
	abstract = {Energy accounting is a fundamental problem in energy management, defined as attributing global energy consumption to individual components of interest. In this paper, we take on this problem at the application level, where the components for accounting are application logical units, such as methods, classes, and packages. Given a Java application, our novel runtime system Chappie produces an energy footprint, i.e., the relative energy consumption of all programming abstraction units within the application. The design of Chappie is unique in several dimensions. First, relative to targeted energy profiling where the profiler determines the energy consumption of a pre-defined application logical unit, e.g., a specific method, Chappie is total: the energy footprint encompasses all methods within an application. Second, Chappie is concurrency-aware: energy attribution is fully aware of the multithreaded behavior of Java applications, including JVM bookkeeping threads. Third, Chappie is an embodiment of a novel philosophy for application-level energy accounting and profiling, which states that the accounting run should preserve the temporal phased power behavior of the application, and the spatial power distribution among the underlying hardware system. We term this important property as calmness. Against state-of-the-art DaCapo benchmarks, we show that the energy footprint generated by Chappie is precise while incurring negligible overhead. In addition, all results are produced with a high degree of calmness.},
	language = {en},
	urldate = {2022-09-11},
	booktitle = {Proceedings of the 28th {ACM} {Joint} {Meeting} on {European} {Software} {Engineering} {Conference} and {Symposium} on the {Foundations} of {Software} {Engineering}},
	publisher = {ACM},
	author = {Babakol, Timur and Canino, Anthony and Mahmoud, Khaled and Saxena, Rachit and Liu, Yu David},
	month = nov,
	year = {2020},
	pages = {976--988},
	file = {Babakol et al. - 2020 - Calm energy accounting for multithreaded Java appl.pdf:/home/prateeks/Zotero/storage/FYUL58FD/Babakol et al. - 2020 - Calm energy accounting for multithreaded Java appl.pdf:application/pdf},
}

@inproceedings{liu_fastcap_2016,
	title = {{FastCap}: {An} efficient and fair algorithm for power capping in many-core systems},
	shorttitle = {{FastCap}},
	doi = {10.1109/ISPASS.2016.7482074},
	abstract = {Future servers will incorporate many active low-power modes for different system components, such as cores and memory. Though these modes provide flexibility for power management via Dynamic Voltage and Frequency Scaling (DVFS), they must be operated in a coordinated manner. Such coordinated control creates a combinatorial space of possible power mode configurations. Given the rapid growth of the number of cores, it is becoming increasingly challenging to quickly select the configuration that maximizes the performance under a given power budget. Prior power capping techniques do not scale well to large numbers of cores, and none of those works has considered memory DVFS. In this paper, we present FastCap, our optimization approach for system-wide power capping, using both CPU and memory DVFS. Based on a queuing model, FastCap formulates power capping as a non-linear optimization problem where we seek to maximize the system performance under a power budget, while promoting fairness across applications. Our FastCap algorithm solves the optimization online and efficiently (low complexity on the number of cores), using a small set of performance counters as input. To evaluate FastCap, we simulate it for a many-core server running different types of workloads. Our results show that FastCap caps power draw accurately, while producing better application performance and fairness than many existing CPU power capping methods (even after they are extended to use of memory DVFS as well).},
	booktitle = {2016 {IEEE} {International} {Symposium} on {Performance} {Analysis} of {Systems} and {Software} ({ISPASS})},
	author = {Liu, Yanpei and Cox, Guilherme and Deng, Qingyuan and Draper, Stark C. and Bianchini, Ricardo},
	month = apr,
	year = {2016},
	keywords = {Optimization, Servers, Resource management, Complexity theory, Memory management, Power demand},
	pages = {57--68},
	file = {IEEE Xplore Abstract Record:/home/prateeks/Zotero/storage/RTW39G62/7482074.html:text/html;IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/YQXG79N7/Liu et al. - 2016 - FastCap An efficient and fair algorithm for power.pdf:application/pdf},
}

@inproceedings{zhang_podd_2019,
	address = {Denver Colorado},
	title = {\textit{{PoDD}}: power-capping dependent distributed applications},
	isbn = {978-1-4503-6229-0},
	shorttitle = {\textit{{PoDD}}},
	url = {https://dl.acm.org/doi/10.1145/3295500.3356174},
	doi = {10.1145/3295500.3356174},
	abstract = {Power budgeting (or capping) has become essential for large-scale computing installations. Meanwhile, as these systems scale out, they can concurrently execute dependent applications that were previously processed serially. Such application coupling reduces IO traffic and overall time to completion as the applications now communicate at runtime instead of through disk. Coupled applications are predicted to be a major workload for future exascale supercomputers; e.g., scientific simulations will execute concurrently with in situ analysis. One critical challenge for power budgeting systems is implementing power capping for coupled applications while still achieving high performance. Existing approaches on power capping coupled workloads, however, have major limitations including: (1) poor practicality, due to dependence on offline application profiling; and (2) limited optimization opportunity, as they consider power reallocation on a strictly global level (from node-to-node), without considering node-level optimization opportunities.},
	language = {en},
	urldate = {2022-04-11},
	booktitle = {Proceedings of the {International} {Conference} for {High} {Performance} {Computing}, {Networking}, {Storage} and {Analysis}},
	publisher = {ACM},
	author = {Zhang, Huazhe and Hoffmann, Henry},
	month = nov,
	year = {2019},
	pages = {1--23},
	file = {Zhang and Hoffmann - 2019 - PoDD power-capping dependent distributed a.pdf:/home/prateeks/Zotero/storage/H8P8B7UU/Zhang and Hoffmann - 2019 - PoDD power-capping dependent distributed a.pdf:application/pdf},
}

@article{zhang_maximizing_2016,
	title = {Maximizing {Performance} {Under} a {Power} {Cap}: {A} {Comparison} of {Hardware}, {Software}, and {Hybrid} {Techniques}},
	abstract = {Power and thermal dissipation constrain multicore performance scaling. Modern processors are built such that they could sustain damaging levels of power dissipation, creating a need for systems that can implement processor power caps. A particular challenge is developing systems that can maximize performance within a power cap, and approaches have been proposed in both software and hardware. Software approaches are ﬂexible, allowing multiple hardware resources to be coordinated for maximum performance, but software is slow, requiring a long time to converge to the power target. In contrast, hardware power capping quickly converges to the the power cap, but only manages voltage and frequency, limiting its potential performance.},
	language = {en},
	journal = {ASPLOS},
	author = {Zhang, Huazhe and Hoffmann, Henry},
	year = {2016},
	pages = {15},
	file = {Zhang and Hoffmann - Maximizing Performance Under a Power Cap A Compar.pdf:/home/prateeks/Zotero/storage/9T7MWA9H/Zhang and Hoffmann - Maximizing Performance Under a Power Cap A Compar.pdf:application/pdf},
}

@inproceedings{krzywda_power_2019,
	title = {Power {Shepherd}: {Application} {Performance} {Aware} {Power} {Shifting}},
	shorttitle = {Power {Shepherd}},
	doi = {10.1109/CloudCom.2019.00019},
	abstract = {Constantly growing power consumption of data centers is a major concern from environmental and economical reasons. Current approaches to reduce negative consequences of high power consumption focus on limiting the peak power consumption. During high workload periods, power consumption of highly utilized servers is throttled to stay within the power budget. However, the peak power reduction affects performance of hosted applications and thus leads to Quality of Service violations. In this paper, we introduce Power Shepherd, a hierarchical system for application performance aware power shifting. Power Shepherd reduces the data center operational costs by redistributing the available power among applications hosted in the cluster. This is achieved by, assigning server power budgets by the cluster controller, enforcing these power budgets using Running Average Power Limit (RAPL), and prioritizing applications within each server by adjusting the CPU scheduling configuration. We implement a prototype of the proposed solution and evaluate it in a real testbed equipped with power meters and using representative cloud applications. Our experiments show that Power Shepherd has potential to manage a cluster consisting of thousands of servers and limit the increase of operational costs by a significant amount when the cluster power budget is limited and the system is overutilized. Finally, we identify some outstanding challenges regarding model sensitivity and the fact that this approach in its current from is not beneficial to be used in all situations, e.g., when the system is underutilized.},
	booktitle = {2019 {IEEE} {International} {Conference} on {Cloud} {Computing} {Technology} and {Science} ({CloudCom})},
	author = {Krzywda, Jakub and Ali-Eldin, Ahmed and Wadbro, Eddie and Östberg, Per-Olov and Elmroth, Erik},
	month = dec,
	year = {2019},
	note = {ISSN: 2330-2186},
	keywords = {cloud computing, quality of service, power budgeting},
	pages = {45--53},
	annote = {- Power Shepherd: performance aware shifting. QoS, RAPL. Multi-server ALPACA (single-server perf power model ICAC 18)
},
	file = {IEEE Xplore Abstract Record:/home/prateeks/Zotero/storage/LVXZIU3H/8968910.html:text/html;IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/5AWLGYRN/Krzywda et al. - 2019 - Power Shepherd Application Performance Aware Powe.pdf:application/pdf},
}

@inproceedings{kidambi_dynamic_1999,
	address = {Boston, MA, USA},
	title = {Dynamic token bucket ({DTB}): a fair bandwidth allocation algorithm for high-speed networks},
	isbn = {978-0-7803-5794-5},
	shorttitle = {Dynamic token bucket ({DTB})},
	url = {http://ieeexplore.ieee.org/document/805491/},
	doi = {10.1109/ICCCN.1999.805491},
	abstract = {Fair allocation of available bandwidth to competing ﬂows is a simple form of quality of service (QoS) that can be provided to customers in packet-switched networks. A number of packet-scheduling and buffer-management techniques have been proposed in the literature to achieve this goal efﬁciently. However, the complexity of the existing algorithms prevents a high-speed implementation with the current state of router technology. We propose a computationally simpler mechanism based on token-bucket policing to achieve almost equal bandwidth allocation for a set of competing ﬂows. The proposed method adjusts the token-bucket threshold dynamically and measures the instantaneous arrival rate of ﬂows. It uses this information to decide whether or not to admit a packet arriving at the network edge. With minor modiﬁcations, our framework can be used in the Internet and Frame Relay based virtual private networks (VPNs). We present a detailed simulation study that evaluates the performance of our algorithm. The simulation results indicate that DTB is fair, efﬁcient, and robust.},
	language = {en},
	urldate = {2022-09-21},
	booktitle = {Proceedings {Eight} {International} {Conference} on {Computer} {Communications} and {Networks} ({Cat}. {No}.{99EX370})},
	publisher = {IEEE},
	author = {Kidambi, J. and Ghosal, D. and Mukherjee, B.},
	year = {1999},
	pages = {24--29},
	file = {Kidambi et al. - 1999 - Dynamic token bucket (DTB) a fair bandwidth alloc.pdf:/home/prateeks/Zotero/storage/HN92SYXR/Kidambi et al. - 1999 - Dynamic token bucket (DTB) a fair bandwidth alloc.pdf:application/pdf},
}

@inproceedings{fan2021deep,
  title={Deep reinforcement agent for scheduling in HPC},
  author={Fan, Yuping and Lan, Zhiling and Childers, Taylor and Rich, Paul and Allcock, William and Papka, Michael E},
  booktitle={2021 IEEE International Parallel and Distributed Processing Symposium (IPDPS)},
  pages={807--816},
  year={2021},
  organization={IEEE}
}

@article{barroso2007case,
  title={The case for energy-proportional computing},
  author={Barroso, Luiz Andr{\'e} and H{\"o}lzle, Urs},
  journal={Computer},
  volume={40},
  number={12},
  pages={33--37},
  year={2007},
  publisher={IEEE}
}

@inproceedings{azimi_powercoord_2018,
	address = {Pittsburgh, PA, USA},
	title = {{PowerCoord}: {A} {Coordinated} {Power} {Capping} {Controller} for {Multi}-{CPU}/{GPU} {Servers}},
	isbn = {978-1-5386-7466-6},
	shorttitle = {{PowerCoord}},
	url = {https://ieeexplore.ieee.org/document/8752132/},
	doi = {10.1109/IGCC.2018.8752132},
	abstract = {Modern supercomputers and cloud providers rely on server nodes that are equipped with multiple CPU sockets and general purpose GPUs (GPGPUs) to handle the high demand for intensive computations. These servers consume much higher power than commodity servers, and integrating them with power capping systems used in modern clusters presents new challenges. In this paper, we propose a new power capping controller, PowerCoord, that is speciﬁcally designed for servers with multiple CPU and GPU sockets that are running multiple jobs at a time. PowerCoord coordinates among the various power domains (e.g., CPU sockets and GPUs) inside a server to meet target power caps, while seeking to maximize throughput. Our approach also takes into consideration job deadlines and priorities. Because performance modeling for co-located jobs is error-prone, PowerCoord uses a learning method to adapt to various workloads. PowerCoord has a number of heuristic policies to allocate power among the various CPUs and GPUs, and it uses reinforcement learning to select the best policy during runtime. Based on the observed state of the system, PowerCoord shifts the distribution of selected policies. We implement our power cap controller on a real multi-CPU/GPU server with low overhead, and we demonstrate that it is able to meet target power caps while maximizing the throughput, and balancing other demands such as priorities and deadlines. Compared to prior published techniques, our results show that PowerCoord improves the throughput by an average of 14.4\% under power caps.},
	language = {en},
	urldate = {2022-09-30},
	booktitle = {2018 {Ninth} {International} {Green} and {Sustainable} {Computing} {Conference} ({IGSC})},
	publisher = {IEEE},
	author = {Azimi, Reza and Jing, Chao and Reda, Sherief},
	month = oct,
	year = {2018},
	pages = {1--9},
	file = {Azimi et al. - 2018 - PowerCoord A Coordinated Power Capping Controller.pdf:/home/prateeks/Zotero/storage/QAWLSPZD/Azimi et al. - 2018 - PowerCoord A Coordinated Power Capping Controller.pdf:application/pdf},
}

@inproceedings{reddy_empirical_2017,
	title = {Empirical {CPU} power modelling and estimation in the gem5 simulator},
	doi = {10.1109/PATMOS.2017.8106988},
	abstract = {Power modelling is important for modern CPUs to inform power management approaches and allow design space exploration. Power simulators, combined with a full-system architectural simulator such as gem5, enable power-performance trade-offs to be investigated early in the design of a system with different configurations (e.g number of cores, cache size, etc.). However, the accuracy of existing power simulators, such as McPAT, is known to be low due to the abstraction and specification errors, and this can lead to incorrect research conclusions. In this paper, we present an accurate power model, built from measured data, integrated into gem5 for estimating the power consumption of a simulated quad-core ARM Cortex-A15. A power modelling methodology based on Performance Monitoring Counters (PMCs) is used to build and evaluate the integrated model in gem5. We first validate this methodology on the real hardware with 60 workloads at nine Dynamic Voltage and Frequency Scaling (DVFS) levels and four core mappings (2,160 samples), showing an average error between estimated and real measured power of less than 6\%. Correlation between gem5 activity statistics and hardware PMCs is investigated to build a gem5 model representing a quad-core ARM Cortex-A15. Experimental validation with 15 workloads at four DVFS levels on real hardware and gem5 has been conducted to understand how the difference between the gem5 simulated activity statistics and the hardware PMCs affects the estimated power consumption.},
	booktitle = {2017 27th {International} {Symposium} on {Power} and {Timing} {Modeling}, {Optimization} and {Simulation} ({PATMOS})},
	author = {Reddy, Basireddy Karunakar and Walker, Matthew J. and Balsamo, Domenico and Diestelhorst, Stephan and Al-Hashimi, Bashir M. and Merrett, Geoff V.},
	month = sep,
	year = {2017},
	keywords = {Data models, Hardware, Microarchitecture, Power demand, Power measurement, Timing, Tools},
	pages = {1--8},
	file = {IEEE Xplore Abstract Record:/home/prateeks/Zotero/storage/4SU5EUSM/8106988.html:text/html;IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/CUIMH2JS/Reddy et al. - 2017 - Empirical CPU power modelling and estimation in th.pdf:application/pdf},
}

@inproceedings{ournani2020taming,
  title={Taming energy consumption variations in systems benchmarking},
  author={Ournani, Zakaria and Belgaid, Mohammed Chakib and Rouvoy, Romain and Rust, Pierre and Penhoat, Joel and Seinturier, Lionel},
  booktitle={Proceedings of the ACM/SPEC International Conference on Performance Engineering},
  pages={36--47},
  year={2020}
}

@article{kansal_fine-grained_2008,
	title = {Fine-grained energy profiling for power-aware application design},
	volume = {36},
	issn = {0163-5999},
	url = {https://doi.org/10.1145/1453175.1453180},
	doi = {10.1145/1453175.1453180},
	abstract = {Significant opportunities for power optimization exist at application design stage and are not yet fully exploited by system and application designers. We describe the challenges developers face in optimizing software for energy efficiency by exploiting application-level knowledge. To address these challenges, we propose the development of automated tools that profile the energy usage of various resource components used by an application and guide the design choices accordingly. We use a preliminary version of a tool we have developed to demonstrate how automated energy profiling helps a developer choose between alternative designs in the energy-performance trade-off space.},
	number = {2},
	urldate = {2022-10-11},
	journal = {ACM SIGMETRICS Performance Evaluation Review},
	author = {Kansal, Aman and Zhao, Feng},
	month = aug,
	year = {2008},
	pages = {26--31},
	file = {Full Text PDF:/home/prateeks/Zotero/storage/XKLQRZ6Y/Kansal and Zhao - 2008 - Fine-grained energy profiling for power-aware appl.pdf:application/pdf},
}

@inproceedings{oliner2013carat,
  title={Carat: Collaborative energy diagnosis for mobile devices},
  author={Oliner, Adam J and Iyer, Anand P and Stoica, Ion and Lagerspetz, Eemil and Tarkoma, Sasu},
  booktitle={Proceedings of the 11th ACM conference on embedded networked sensor systems},
  pages={1--14},
  year={2013}
}

@article{do_ptop_2009,
	title = {{pTop}: {A} {Process}-level {Power} {Profiling} {Tool}},
	language = {en},
	journal = {HotPower},
	author = {Do, Thanh and Rawshdeh, Suhib and Shi, Weisong},
	year = {2009},
	pages = {5},
	file = {Do et al. - pTop A Process-level Power Proﬁling Tool.pdf:/home/prateeks/Zotero/storage/C78B6NGK/Do et al. - pTop A Process-level Power Proﬁling Tool.pdf:application/pdf},
}

@article{noureddine2013review,
  title={A review of energy measurement approaches},
  author={Noureddine, Adel and Rouvoy, Romain and Seinturier, Lionel},
  journal={ACM SIGOPS Operating Systems Review},
  volume={47},
  number={3},
  pages={42--49},
  year={2013},
  publisher={ACM New York, NY, USA}
}

@inproceedings{seo2007energy,
  title={An energy consumption framework for distributed java-based systems},
  author={Seo, Chiyoung and Malek, Sam and Medvidovic, Nenad},
  booktitle={Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering},
  pages={421--424},
  year={2007}
}

@inproceedings{lewis_run-time_2008,
	address = {USA},
	series = {{HotPower}'08},
	title = {Run-time energy consumption estimation based on workload in server systems},
	abstract = {This paper proposes to develop a system-wide energy consumption model for servers by making use of hardware performance counters and experimental measurements. We develop a real-time energy prediction model that relates server energy consumption to its overall thermal envelope. While previous studies have attempted system-wide modeling of server power consumption through subsystem models, our approach is different in that it uses a small set of tightly correlated parameters to create a model relating system energy input to subsystem energy consumption. We develop a linear regression model that relates processor power, bus activity, and system ambient temperatures into real-time predictions of the power consumption of long jobs and as result controlling their thermal impact. Using the HyperTransport bus model as a case study and through electrical measurements on example server subsystems, we develop a statistical model for estimating run-time power consumption. Our model is accurate within an error of four percent(4\%) as verified using a set of common processor benchmarks.},
	urldate = {2022-10-11},
	booktitle = {Proceedings of the 2008 conference on {Power} aware computing and systems},
	publisher = {USENIX Association},
	author = {Lewis, Adam and Ghosh, Soumik and Tzeng, N.-F.},
	month = dec,
	year = {2008},
	pages = {4},
}

@inproceedings{carroll2010analysis,
  title={An analysis of power consumption in a smartphone},
  author={Carroll, Aaron and Heiser, Gernot},
  booktitle={2010 USENIX Annual Technical Conference (USENIX ATC 10)},
  year={2010}
}

@inproceedings{pathak2012energy,
  title={Where is the energy spent inside my app? Fine Grained Energy Accounting on Smartphones with Eprof},
  author={Pathak, Abhinav and Hu, Y Charlie and Zhang, Ming},
  booktitle={Proceedings of the 7th ACM european conference on Computer Systems},
  pages={29--42},
  year={2012}
}

@article{yoon_appscope_2012,
	title = {{AppScope}: {Application} {Energy} {Metering} {Framework} for {Android} {Smartphones} using {Kernel} {Activity} {Monitoring}},
	abstract = {Understanding the energy consumption of a smartphone application is a key area of interest for end users, as well as application and system software developers. Previous work has only been able to provide limited information concerning the energy consumption of individual applications because of limited access to underlying hardware and system software. The energy consumption of a smartphone application is, therefore, often estimated with low accuracy and granularity. In this paper, we propose AppScope, an Android-based energy metering system. This system monitors application’s hardware usage at the kernel level and accurately estimates energy consumption. AppScope is implemented as a kernel module and uses an event-driven monitoring method that generates low overhead and provides high accuracy. The evaluation results indicate that AppScope accurately estimates the energy consumption of Android applications expending approximately 35mW and 2.1\% in power consumption and CPU utilization overhead, respectively.},
	language = {en},
	journal = {USENIX ATC},
	author = {Yoon, Chanmin and Kim, Dongwon and Jung, Wonwoo and Kang, Chulkoo and Cha, Hojung},
	year = {2012},
	pages = {14},
	file = {Yoon et al. - AppScope Application Energy Metering Framework fo.pdf:/home/prateeks/Zotero/storage/LLCXFHSM/Yoon et al. - AppScope Application Energy Metering Framework fo.pdf:application/pdf},
}

@article{ein1985grosch,
  title={Grosch's law re-revisited: CPU power and the cost of computation},
  author={Ein-Dor, Phillip},
  journal={Communications of the ACM},
  volume={28},
  number={2},
  pages={142--151},
  year={1985},
  publisher={ACM New York, NY, USA}
}

@article{wang_distributed_2010,
	title = {Distributed {Systems} {Meet} {Economics}: {Pricing} in the {Cloud}},
	abstract = {Cloud computing allows users to perform computation in a public cloud with a pricing scheme typically based on incurred resource consumption. While cloud computing is often considered as merely a new application for classic distributed systems, we argue that, by decoupling users from cloud providers with a pricing scheme as the bridge, cloud computing has fundamentally changed the landscape of system design and optimization. Our preliminary studies on Amazon EC2 cloud service and on a local cloud computing testbed, have revealed an interesting interplay between distributed systems and economics related to pricing. We believe that this new angle of looking at distributed systems potentially fosters new insights into cloud computing.},
	language = {en},
	journal = {HotCloud},
	author = {Wang, Hongyi and Jing, Qingfeng and Chen, Rishan and He, Bingsheng and Qian, Zhengping and Zhou, Lidong},
	year = {2010},
	pages = {7},
	file = {Wang et al. - Distributed Systems Meet Economics Pricing in the.pdf:/home/prateeks/Zotero/storage/PMT85EWN/Wang et al. - Distributed Systems Meet Economics Pricing in the.pdf:application/pdf},
}

@inproceedings{narayanan_mediating_2020,
	title = {Mediating {Power} {Struggles} on a {Shared} {Server}},
	doi = {10.1109/ISPASS48437.2020.00030},
	abstract = {Most of today's servers, with numerous CPU cores and other plentiful direct resources, host co-located workloads using mechanisms to reduce hardware resource contention. However, power is an equally important indirect resource in a server that is shared between the co-located applications, for which they can contend, especially when power budgets are tight. We refer to this as a "power struggle". While there is a considerable amount of prior effort on server power capping, they are largely oblivious to power as an indirectly shared resource. This indirect resource exhibits a unique set of properties - spatial non-multiplexing, non-convex, fluidic, time-shifting and dynamic capacity - which have not been explicitly tackled so far. We propose policies that explicitly consider these properties to mediate power struggles, implement these on real hardware, and provide experimental results to show the performance benefits of our solution.},
	booktitle = {2020 {IEEE} {International} {Symposium} on {Performance} {Analysis} of {Systems} and {Software} ({ISPASS})},
	author = {Narayanan, Iyswarya and Sivasubramaniam, Anand},
	month = aug,
	year = {2020},
	keywords = {Hardware, Servers, Software, Dynamic scheduling, Performance analysis, Fluid dynamics},
	pages = {149--159},
	file = {IEEE Xplore Abstract Record:/home/prateeks/Zotero/storage/9E2Y4W2U/9238623.html:text/html;IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/BDDU9K7N/Narayanan and Sivasubramaniam - 2020 - Mediating Power Struggles on a Shared Server.pdf:application/pdf},
}

@inproceedings{zhang_red_2021,
	address = {Virtual Event Hong Kong},
	title = {Red {Alert} for {Power} {Leakage}: {Exploiting} {Intel} {RAPL}-{Induced} {Side} {Channels}},
	isbn = {978-1-4503-8287-8},
	shorttitle = {Red {Alert} for {Power} {Leakage}},
	url = {https://dl.acm.org/doi/10.1145/3433210.3437517},
	doi = {10.1145/3433210.3437517},
	abstract = {RAPL (Running Average Power Limit) is a hardware feature introduced by Intel to facilitate power management. Even though RAPL and its supporting software interfaces can benefit power management significantly, they are unfortunately designed without taking certain security issues into careful consideration. In this paper, we demonstrate that information leaked through RAPL-induced side channels can be exploited to mount realistic attacks. Specifically, we have constructed a new RAPL-based covert channel using a single AVX instruction, which can exfiltrate data across different boundaries (e.g., those established by containers in software or even CPUs in hardware); and, we have investigated the first RAPL-based website fingerprinting technique that can identify visited webpages with a high accuracy (up to 99\% in the case of the regular network using a browser like Chrome or Safari, and up to 81\% in the case of the anonymity network using Tor). These two studies form a preliminary examination into RAPL-imposed security implications. In addition, we discuss some possible countermeasures.},
	language = {en},
	urldate = {2022-04-11},
	booktitle = {Proceedings of the 2021 {ACM} {Asia} {Conference} on {Computer} and {Communications} {Security}},
	publisher = {ACM},
	author = {Zhang, Zhenkai and Liang, Sisheng and Yao, Fan and Gao, Xing},
	month = may,
	year = {2021},
	pages = {162--175},
	file = {Zhang et al. - 2021 - Red Alert for Power Leakage Exploiting Intel RAPL.pdf:/home/prateeks/Zotero/storage/NZNL3ARR/Zhang et al. - 2021 - Red Alert for Power Leakage Exploiting Intel RAPL.pdf:application/pdf},
}

@inproceedings{colmant_process-level_2015,
	address = {Bordeaux France},
	title = {Process-level power estimation in {VM}-based systems},
	isbn = {978-1-4503-3238-5},
	url = {https://dl.acm.org/doi/10.1145/2741948.2741971},
	doi = {10.1145/2741948.2741971},
	abstract = {Power estimation of software processes provides critical indicators to drive scheduling or power capping heuristics. State-of-the-art solutions can perform coarse-grained power estimation in virtualized environments, typically treating virtual machines (VMs) as a black box. Yet, VM-based systems are nowadays commonly used to host multiple applications for cost savings and better use of energy by sharing common resources and assets.},
	language = {en},
	urldate = {2022-04-11},
	booktitle = {Proceedings of the {Tenth} {European} {Conference} on {Computer} {Systems}},
	publisher = {ACM},
	author = {Colmant, Maxime and Kurpicz, Mascha and Felber, Pascal and Huertas, Loïc and Rouvoy, Romain and Sobe, Anita},
	month = apr,
	year = {2015},
	pages = {1--14},
	file = {Colmant et al. - 2015 - Process-level power estimation in VM-based systems.pdf:/home/prateeks/Zotero/storage/KBY8DRMZ/Colmant et al. - 2015 - Process-level power estimation in VM-based systems.pdf:application/pdf},
}

@inproceedings{brondolin_deep-mon_2018,
	title = {{DEEP}-{Mon}: {Dynamic} and {Energy} {Efficient} {Power} {Monitoring} for {Container}-{Based} {Infrastructures}},
	shorttitle = {{DEEP}-{Mon}},
	doi = {10.1109/IPDPSW.2018.00110},
	abstract = {In the last few years energy efficiency of large scale infrastructures gained a lot of attention, as power consumption became one of the most impacting factors of the operative costs of a data-center and of its Total Cost of Ownership (TCO). Power consumption can be observed at different layers of the data-center, from the overall power grid, moving to each rack and arriving to each machine and system. Given the rise of application containers both in the cloud computing and High Performance Computing (HPC) scenarios, it becomes more and more important to measure power consumption also at the application level, where power-aware schedulers and orchestrators can optimize the execution of the workloads not only from a performance perspective, but also considering performance/power trade-offs. In this paper we propose DEEP-mon, a novel monitoring tool able to measure power consumption and attribute it for each thread and application container running in the system. Moreover, we show how the proposed approach has a negligible impact on the monitored system and on the running workloads, overcoming the limitations of the previous works in the field.},
	booktitle = {2018 {IEEE} {International} {Parallel} and {Distributed} {Processing} {Symposium} {Workshops} ({IPDPSW})},
	author = {Brondolin, Rolando and Sardelli, Tommaso and Santambrogio, Marco D.},
	month = may,
	year = {2018},
	keywords = {Monitoring, Tools, Context, Data centers, Containers, Power measurement, Power demand, application containers, monitoring, power attribution, power awareness},
	pages = {676--684},
	file = {IEEE Xplore Abstract Record:/home/prateeks/Zotero/storage/NGFBKVDX/8425477.html:text/html;IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/2HC2ZZHC/Brondolin et al. - 2018 - DEEP-Mon Dynamic and Energy Efficient Power Monit.pdf:application/pdf},
}

@inproceedings{bellosa2000benefits,
  title={The benefits of event: driven energy accounting in power-sensitive systems},
  author={Bellosa, Frank},
  booktitle={Proceedings of the 9th workshop on ACM SIGOPS European workshop: beyond the PC: new challenges for the operating system},
  pages={37--42},
  year={2000}
}

@inproceedings{zhai2014happy,
  title={{HaPPy}: Hyperthread-aware Power Profiling Dynamically},
  author={Zhai, Yan and Zhang, Xiao and Eranian, Stephane and Tang, Lingjia and Mars, Jason},
  booktitle={2014 USENIX annual technical conference (USENIX ATC 14)},
  pages={211--217},
  year={2014}
}

@article{zhang_quantitative_2015,
	title = {A {Quantitative} {Evaluation} of the {RAPL} {Power} {Control} {System}},
	abstract = {We evaluate Intel’s RAPL power control system, which allows users to set a power limit and then tunes processor behavior to respect that limit. We evaluate RAPL by setting power limits and running a number of standard benchmarks. We quantify RAPL along ﬁve metrics: stability, accuracy, settling time, overshoot, and efﬁciency. The ﬁrst four are standard measures for evaluating control systems. The last recognizes that any power control approach should deliver the highest possible performance achievable within the power limit. Our results show that RAPL performs well on the four standard metrics, but some benchmarks fail to achieve maximum performance. At high power limits, the average performance is within 90\% of optimal. At middle power limits, it is 86\% of optimal. At low power limits, the average performance is less than 65\% of optimal.},
	language = {en},
	journal = {Feedback computing},
	author = {Zhang, Huazhe and Hoffmann, Henry},
	year = {2015},
	pages = {6},
	file = {Zhang and Hoffmann - A Quantitative Evaluation of the RAPL Power Contro.pdf:/home/prateeks/Zotero/storage/ENYXQDU9/Zhang and Hoffmann - A Quantitative Evaluation of the RAPL Power Contro.pdf:application/pdf},
}

@inproceedings{desrochers_validation_2016,
	address = {Alexandria VA USA},
	title = {A {Validation} of {DRAM} {RAPL} {Power} {Measurements}},
	isbn = {978-1-4503-4305-3},
	url = {https://dl.acm.org/doi/10.1145/2989081.2989088},
	doi = {10.1145/2989081.2989088},
	language = {en},
	urldate = {2022-04-21},
	booktitle = {Proceedings of the {Second} {International} {Symposium} on {Memory} {Systems}},
	publisher = {ACM},
	author = {Desrochers, Spencer and Paradis, Chad and Weaver, Vincent M.},
	month = oct,
	year = {2016},
	pages = {455--470},
	file = {Desrochers et al. - 2016 - A Validation of DRAM RAPL Power Measurements.pdf:/home/prateeks/Zotero/storage/GZWJY7EZ/Desrochers et al. - 2016 - A Validation of DRAM RAPL Power Measurements.pdf:application/pdf},
}

@article{mccullough_evaluating_2011,
	title = {Evaluating the {Effectiveness} of {Model}-{Based} {Power} {Characterization}},
	abstract = {Accurate power characterization is important in computing platforms for several reasons ranging from poweraware adaptation to power provisioning. Power characterization is typically obtained through either direct measurements enabled by physical instrumentation or modeling based on hardware performance counters. We show, however, that linear-regression based modeling techniques commonly used in the literature work well only in restricted settings. These techniques frequently exhibit high prediction error in modern computing platforms due to inherent complexities such as multiple cores, hidden device states, and large dynamic power components.},
	language = {en},
	journal = {USENIX ATC},
	author = {McCullough, John C and Agarwal, Yuvraj and Chandrashekar, Jaideep and Kuppuswamy, Sathyanarayan and Snoeren, Alex C and Gupta, Rajesh K},
	year = {2011},
	pages = {14},
	file = {McCullough et al. - Evaluating the Effectiveness of Model-Based Power .pdf:/home/prateeks/Zotero/storage/73CE9ZJE/McCullough et al. - Evaluating the Effectiveness of Model-Based Power .pdf:application/pdf},
}

@article{narayan2013power,
  title={Power-aware cloud metering},
  author={Narayan, Akshay and Rao, Shrisha},
  journal={IEEE Transactions on Services Computing},
  volume={7},
  number={3},
  pages={440--451},
  year={2013},
  publisher={IEEE}
}

@misc{shao_your_2020,
	title = {Your {Noise}, {My} {Signal}: {Exploiting} {Switching} {Noise} for {Stealthy} {Data} {Exfiltration} from {Desktop} {Computers}},
	shorttitle = {Your {Noise}, {My} {Signal}},
	url = {http://arxiv.org/abs/2001.06729},
	abstract = {Attacks based on power analysis have been long existing and studied, with some recent works focused on data exfiltration from victim systems without using conventional communications (e.g., WiFi). Nonetheless, prior works typically rely on intrusive direct power measurement, either by implanting meters in the power outlet or tapping into the power cable, thus jeopardizing the stealthiness of attacks. In this paper, we propose NoDE (Noise for Data Exfiltration), a new system for stealthy data exfiltration from enterprise desktop computers. Specifically, NoDE achieves data exfiltration over a building’s power network by exploiting high-frequency voltage ripples (i.e., switching noises) generated by power factor correction circuits built into today’s computers. Located at a distance and even from a different room, the receiver can non-intrusively measure the voltage of a power outlet to capture the high-frequency switching noises for online information decoding without supervised training/learning. To evaluate NoDE, we run experiments on seven different computers from top vendors and using top-brand power supply units. Our results show that for a single transmitter, NoDE achieves a rate of up to 28.48 bits/second with a distance of 90 feet (27.4 meters) without the line of sight, demonstrating a practically stealthy threat. Based on the orthogonality of switching noise frequencies of different computers, we also demonstrate simultaneous data exfiltration from four computers using only one receiver. Finally, we present a few possible defenses, such as installing noise filters, and discuss their limitations.},
	language = {en},
	urldate = {2022-09-28},
	publisher = {arXiv},
	author = {Shao, Zhihui and Islam, Mohammad A. and Ren, Shaolei},
	month = jan,
	year = {2020},
	note = {arXiv:2001.06729 [cs]},
	keywords = {Computer Science - Cryptography and Security},
	annote = {Comment: 23 pages, 40 figures, to be presented at ACM SIGMETRICS, June 08{\textasciitilde}12, 2020, Boston, MA},
	file = {Shao et al. - 2020 - Your Noise, My Signal Exploiting Switching Noise .pdf:/home/prateeks/Zotero/storage/XVBJPWM3/Shao et al. - 2020 - Your Noise, My Signal Exploiting Switching Noise .pdf:application/pdf},
}

@inproceedings{pereira_energy_2017,
	address = {Vancouver BC Canada},
	title = {Energy efficiency across programming languages: how do energy, time, and memory relate?},
	isbn = {978-1-4503-5525-4},
	shorttitle = {Energy efficiency across programming languages},
	url = {https://dl.acm.org/doi/10.1145/3136014.3136031},
	doi = {10.1145/3136014.3136031},
	abstract = {This paper presents a study of the runtime, memory usage and energy consumption of twenty seven well-known software languages. We monitor the performance of such languages using ten different programming problems, expressed in each of the languages. Our results show interesting findings, such as, slower/faster languages consuming less/more energy, and how memory usage influences energy consumption. We show how to use our results to provide software engineers support to decide which language to use when energy efficiency is a concern.},
	language = {en},
	urldate = {2022-07-15},
	booktitle = {Proceedings of the 10th {ACM} {SIGPLAN} {International} {Conference} on {Software} {Language} {Engineering}},
	publisher = {ACM},
	author = {Pereira, Rui and Couto, Marco and Ribeiro, Francisco and Rua, Rui and Cunha, Jácome and Fernandes, João Paulo and Saraiva, João},
	month = oct,
	year = {2017},
	pages = {256--267},
	file = {Pereira et al. - 2017 - Energy efficiency across programming languages ho.pdf:/home/prateeks/Zotero/storage/ZTUF7EAV/Pereira et al. - 2017 - Energy efficiency across programming languages ho.pdf:application/pdf},
}

@article{sen_pareto_2017,
	title = {Pareto {Governors} for {Energy}-{Optimal} {Computing}},
	volume = {14},
	issn = {1544-3566, 1544-3973},
	url = {https://dl.acm.org/doi/10.1145/3046682},
	doi = {10.1145/3046682},
	abstract = {The original definition of energy-proportional computing does not characterize the energy efficiency of recent reconfigurable computers, resulting in nonintuitive “super-proportional” behavior. This article introduces a new definition of ideal energy-proportional computing, new metrics to quantify computational energy waste, and new SLA-aware OS governors that seek Pareto optimality to achieve power-efficient performance.},
	language = {en},
	number = {1},
	urldate = {2022-04-21},
	journal = {ACM Transactions on Architecture and Code Optimization},
	author = {Sen, Rathijit and Wood, David A.},
	month = apr,
	year = {2017},
	pages = {1--25},
	file = {Sen and Wood - 2017 - Pareto Governors for Energy-Optimal Computing.pdf:/home/prateeks/Zotero/storage/364HJ3VM/Sen and Wood - 2017 - Pareto Governors for Energy-Optimal Computing.pdf:application/pdf},
}

@article{fahad_accurate_2020,
	title = {Accurate {Energy} {Modelling} of {Hybrid} {Parallel} {Applications} on {Modern} {Heterogeneous} {Computing} {Platforms} {Using} {System}-{Level} {Measurements}},
	volume = {8},
	issn = {2169-3536},
	doi = {10.1109/ACCESS.2020.2994953},
	abstract = {Modern high-performance computing platforms, cloud computing systems, and data centers are highly heterogeneous containing nodes where a multicore CPU is tightly integrated with accelerators. An important challenge for energy optimization of hybrid parallel applications on such platforms is how to accurately estimate the energy consumption of application components running on different compute devices of the platform. In this work, we propose a method for accurate estimation of the application component-level energy consumption employing system-level power measurements with power meters. We experimentally validate the method on a cluster of two hybrid heterogeneous computing nodes using three parallel applications - matrix-matrix multiplication, 2D fast Fourier transform and gene sequencing. The experiments demonstrate a high estimation accuracy of the proposed method, with the average estimation error ranging between 2\% and 5\%. The average error demonstrated by the state-of-the-art estimation methods for the same experimental setup ranges from 15\% to 75\%, while the maximum reaches 178\%. We also show that the use of the state-of-the-art estimation methods instead of the proposed one in the energy optimization loop leads to significant energy losses (up to 45\% in our case).},
	journal = {IEEE Access},
	author = {Fahad, Muhammad and Shahid, Arsalan and Manumachu, Ravi Reddy and Lastovetsky, Alexey},
	year = {2020},
	note = {Conference Name: IEEE Access},
	keywords = {Computational modeling, Optimization, Energy consumption, Sensors, Energy measurement, Multicore processing, Energy modelling, energy optimization, GPU, heterogeneous platforms, HPC, Intel Xeon Phi, multicore CPU, on-chip power sensors, parallel applications, power meters, System-on-chip},
	pages = {93793--93829},
	file = {IEEE Xplore Abstract Record:/home/prateeks/Zotero/storage/AW5RBNM7/9094309.html:text/html;IEEE Xplore Full Text PDF:/home/prateeks/Zotero/storage/A9PVU2W3/Fahad et al. - 2020 - Accurate Energy Modelling of Hybrid Parallel Appli.pdf:application/pdf},
}

@article{flinn_energy-aware_1999,
	title = {Energy-aware adaptation for mobile applications},
	abstract = {In this paper, we demonstrate that a collaborative relationship between the operating system and applications can be used to meet user-specified goals for battery duration. We first show how applications can dynamically modify their behavior to conserve energy. We then show how the Linux operating system can guide such adaptation to yield a batterylife of desired duration. By monitoring energy supply and demand, it is able to select the correct tradeoff between energy conservation and application quality. Our evaluation shows that this approach can meet goals that extend battery life by as much as 30\%.},
	language = {en},
	journal = {ACM SIGOPS Operating Systems Review},
	author = {Flinn, Jason and Satyanarayanan, M},
	year = {1999},
	pages = {16},
	file = {Flinn and Satyanarayanan - Energy-aware adaptation for mobile applications.pdf:/home/prateeks/Zotero/storage/8XMD6YT4/Flinn and Satyanarayanan - Energy-aware adaptation for mobile applications.pdf:application/pdf},
}

@misc{gcp_carbon_22,
	title = {Google Cloud Carbon {Footprint}},
	howpublished={\url{https://cloud.google.com/carbon-footprint}},
	abstract = {Google Cloud Carbon Footprint provides the carbon emissions of your cloud usage. Measure, report and disclose carbon emissions for ESG reporting.},
	language = {en},
	date = {2022-10-12},
	file = {Snapshot:/home/prateeks/Zotero/storage/BBMQTZN9/carbon-footprint.html:text/html},
}

@misc{azure_sustainability_calc,
	title = {Microsoft {Sustainability} {Calculator} helps enterprises analyze the carbon emissions of their {IT} infrastructure},
howpublished={\url {https://azure.microsoft.com/en-us/blog/microsoft-sustainability-calculator-helps-enterprises-analyze-the-carbon-emissions-of-their-it-infrastructure/}},
	abstract = {For more than a decade, Microsoft has been investing to reduce environmental impact while supporting the digital transformation of organizations around the world through cloud services.},
	language = {en},
        date = {2022-10-12},
	file = {Snapshot:/home/prateeks/Zotero/storage/47UI3PX5/microsoft-sustainability-calculator-helps-enterprises-analyze-the-carbon-emissions-of-their-it-.html:text/html},
}

@misc{aws_carbon_tool,
	title = {{Customer} {Carbon} {Footprint} {Tool} {\textbar} {AWS} {News} {Blog}},
	url = {https://aws.amazon.com/blogs/aws/new-customer-carbon-footprint-tool/},
	language = {en-US},
	date = {2022-10-12},
	month = mar,
	year = {2022},
	note = {Section: Announcements},
	file = {Snapshot:/home/prateeks/Zotero/storage/CW3EHK8K/new-customer-carbon-footprint-tool.html:text/html},
}

@article{Siddik_2021,
	doi = {10.1088/1748-9326/abfba1},
	url = {https://doi.org/10.1088/1748-9326/abfba1},
	year = 2021,
	month = {may},
	publisher = {{IOP} Publishing},
	volume = {16},
	number = {6},
	pages = {064017},
	author = {Md Abu Bakar Siddik and Arman Shehabi and Landon Marston},
	title = {The environmental footprint of data centers in the United States},
	journal = {Environmental Research Letters},
	abstract = {Much of the world’s data are stored, managed, and distributed by data centers. Data centers require a tremendous amount of energy to operate, accounting for around 1.8}
}

@article{agmon2014rise,
  title={The rise of RaaS: the resource-as-a-service cloud},
  author={Agmon Ben-Yehuda, Orna and Ben-Yehuda, Muli and Schuster, Assaf and Tsafrir, Dan},
  journal={Communications of the ACM},
  volume={57},
  number={7},
  pages={76--84},
  year={2014},
  publisher={ACM New York, NY, USA}
}

@article{aditya_fb_hotc22,
title={Carbon Dependencies in Datacenter Design and Management},
author={Bilge Acun, Benjamin C. Lee, Fiodar Kazhamiaka, Aditya Sundarrajan, Manoj Chakkaravarthy, Kiwan Maeng, David Brooks, Carole-Jean Wu},
year={2002},
journal={HotCarbon: Workshop on Sustainable Computer Systems Design and Implementation}
}

@article{treehouse_hotc22,
title={A Case For Carbon-Aware Datacenter Software}
author={Thomas Anderson, Adam Belay, Mosharaf Chowdhury, Asaf Cidon, Irene Zhang},
year ={2022},
journal={HotCarbon: Workshop on Sustainable Computer Systems Design and Implementation}
}

@inproceedings{prakash2021optimizing,
  title={Optimizing Goodput of Real-time Serverless Functions using Dynamic Slicing with vGPUs},
  author={Prakash, Chandra and Garg, Anshuj and Bellur, Umesh and Kulkarni, Purushottam and Kurkure, Uday and Sivaraman, Hari and Vu, Lan},
  booktitle={2021 IEEE International Conference on Cloud Engineering (IC2E)},
  pages={60--70},
  year={2021},
  organization={IEEE}
}

@misc{containerd,
title={Containerd: An industry standard container runtime},
howpublished={\url{https://containerd.io/}},
}

@book{welch1995introduction,
  title={An introduction to the Kalman filter},
  author={Welch, Greg and Bishop, Gary and others},
  year={1995},
  publisher={Chapel Hill, NC, USA}
}

@article{winter2002shapley,
  title={The shapley value},
  author={Winter, Eyal},
  journal={Handbook of game theory with economic applications},
  volume={3},
  pages={2025--2054},
  year={2002},
  publisher={Elsevier}
}

@article{Pearson2019,
  author={Kyle A. Pearson and Caitlin A. Griffith and Robert T. Zellem and Tommi T. Koskinen and Gael M. Roudier},
  title={Ground-based Spectroscopy of the Exoplanet XO-2b Using a Systematic Wavelength Calibration},
  journal={The Astronomical Journal},
  volume={157},
  number={1},
  pages={21},
  url={http://stacks.iop.org/1538-3881/157/i=1/a=21},
  year={2019}
}

@article{scikit-learn,
 title={Scikit-learn: Machine Learning in {P}ython},
 author={Pedregosa, F. and Varoquaux, G. and Gramfort, A. and Michel, V.
         and Thirion, B. and Grisel, O. and Blondel, M. and Prettenhofer, P.
         and Weiss, R. and Dubourg, V. and Vanderplas, J. and Passos, A. and
         Cournapeau, D. and Brucher, M. and Perrot, M. and Duchesnay, E.},
 journal={Journal of Machine Learning Research},
 volume={12},
 pages={2825--2830},
 year={2011}
}

@misc{powerapi-bug,
title={{PowerAPI-NG github issue: RAPL\_ENERGY\_PKG is invalid or unsupported}},
howpublished={\url{https://github.com/powerapi-ng/powerapi/issues/125}},
}

@article{meinhold1983understanding,
  title={{Understanding the Kalman filter}},
  author={Meinhold, Richard J and Singpurwalla, Nozer D},
  journal={The American Statistician},
  volume={37},
  number={2},
  pages={123--127},
  year={1983},
  publisher={Taylor \& Francis}
}

@article{hotc-blind,
title={Blinded},
author={Anon.},
year={2022}
}

@article{patterson2021carbon,
  title={Carbon emissions and large neural network training},
  author={Patterson, David and Gonzalez, Joseph and Le, Quoc and Liang, Chen and Munguia, Lluis-Miquel and Rothchild, Daniel and So, David and Texier, Maud and Dean, Jeff},
  journal={arXiv preprint arXiv:2104.10350},
  year={2021}
}

@inproceedings{shillaker2020faasm,
  title={Faasm: Lightweight isolation for efficient stateful serverless computing},
  author={Shillaker, Simon and Pietzuch, Peter},
  booktitle={2020 USENIX Annual Technical Conference (USENIX ATC 20)},
  pages={419--433},
  year={2020}
}

@misc{esn-iu-news-22,
title={{AI researchers to help Indiana manufacturers reduce energy use}},
author={IU News},
howpublished={\url{https://news.iu.edu/live/news/27989-ai-researchers-to-help-indiana-manufacturers}},
date={July 2022}
}

@inproceedings{copik_sebs_2021,
	address = {Québec city Canada},
	title = {{SeBS}: a serverless benchmark suite for function-as-a-service computing},
	isbn = {978-1-4503-8534-3},
	shorttitle = {{SeBS}},
	url = {https://dl.acm.org/doi/10.1145/3464298.3476133},
	doi = {10.1145/3464298.3476133},
	abstract = {Function-as-a-Service (FaaS) is one of the most promising directions for the future of cloud services, and serverless functions have immediately become a new middleware for building scalable and cost-efficient applications. However, the quickly moving technology hinders reproducibility, and the lack of a standardized benchmarking suite leads to using ad-hoc solutions and microbenchmarks in serverless research, further complicating meta-analysis and comparison of research solutions. To address this challenge, we propose the Serverless Benchmark Suite: the benchmark for FaaS computing that systematically covers a wide spectrum of cloud resources and applications. Our benchmark consists of the specification of representative workloads, the accompanying implementation infrastructure, and the evaluation methodology that facilitates reproducibility and enables interpretability. We demonstrate that the abstract model of a FaaS execution environment ensures the applicability of our benchmark to multiple commercial providers such as AWS, Azure, and Google Cloud. Our work delivers a standardized, reliable, and evolving evaluation methodology of performance, efficiency, scalability, and reliability of middleware FaaS platforms.},
	language = {en},
	urldate = {2022-11-10},
	booktitle = {Proceedings of the 22nd {International} {Middleware} {Conference}},
	publisher = {ACM},
	author = {Copik, Marcin and Kwasniewski, Grzegorz and Besta, Maciej and Podstawski, Michal and Hoefler, Torsten},
	month = nov,
	year = {2021},
	pages = {64--78},
	file = {Copik et al. - 2021 - SeBS a serverless benchmark suite for function-as.pdf:/home/prateeks/Zotero/storage/GBCVVVHL/Copik et al. - 2021 - SeBS a serverless benchmark suite for function-as.pdf:application/pdf},
}

@inproceedings{roy2022icebreaker,
  title={IceBreaker: warming serverless functions better with heterogeneity},
  author={Roy, Rohan Basu and Patel, Tirthak and Tiwari, Devesh},
  booktitle={Proceedings of the 27th ACM International Conference on Architectural Support for Programming Languages and Operating Systems},
  pages={753--767},
  year={2022}
}

@article{gandhi-autoscale-12,
author = {Gandhi, Anshul and Harchol-Balter, Mor and Raghunathan, Ram and Kozuch, Michael A.},
title = {AutoScale: Dynamic, Robust Capacity Management for Multi-Tier Data Centers},
year = {2012},
issue_date = {November 2012},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {30},
number = {4},
issn = {0734-2071},
url = {https://doi.org/10.1145/2382553.2382556},
doi = {10.1145/2382553.2382556},
abstract = {Energy costs for data centers continue to rise, already exceeding 15 billion yearly. Sadly much of this power is wasted. Servers are only busy 10--30% of the time on average, but they are often left on, while idle, utilizing 60% or more of peak power when in the idle state.We introduce a dynamic capacity management policy, AutoScale, that greatly reduces the number of servers needed in data centers driven by unpredictable, time-varying load, while meeting response time SLAs. AutoScale scales the data center capacity, adding or removing servers as needed. AutoScale has two key features: (i) it autonomically maintains just the right amount of spare capacity to handle bursts in the request rate; and (ii) it is robust not just to changes in the request rate of real-world traces, but also request size and server efficiency.We evaluate our dynamic capacity management approach via implementation on a 38-server multi-tier data center, serving a web site of the type seen in Facebook or Amazon, with a key-value store workload. We demonstrate that AutoScale vastly improves upon existing dynamic capacity management policies with respect to meeting SLAs and robustness.},
journal = {ACM Trans. Comput. Syst.},
month = {nov},
articleno = {14},
numpages = {26},
keywords = {power management, Data centers, resource provisioning}
}

@book{sewak2019deep,
  title={Deep reinforcement learning},
  author={Sewak, Mohit},
  year={2019},
  publisher={Springer}
}

