\BOOKMARK [0][-]{chapter*.1}{Acknowledgements}{}% 1
\BOOKMARK [0][-]{chapter*.1}{Abstract}{}% 2
\BOOKMARK [0][-]{chapter*.6}{Abbreviations}{}% 3
\BOOKMARK [0][-]{chapter.1}{Introduction}{}% 4
\BOOKMARK [1][-]{section.1.1}{Thesis Outline}{chapter.1}% 5
\BOOKMARK [0][-]{chapter.2}{Background: Serverless computing and Function as a Service}{}% 6
\BOOKMARK [1][-]{section.2.1}{What exactly is Serverless Computing?}{chapter.2}% 7
\BOOKMARK [1][-]{section.2.2}{Serverless Containers}{chapter.2}% 8
\BOOKMARK [2][-]{subsection.2.2.1}{Virtual Machines}{section.2.2}% 9
\BOOKMARK [2][-]{subsection.2.2.2}{VM Resource Management}{section.2.2}% 10
\BOOKMARK [2][-]{subsection.2.2.3}{Containers}{section.2.2}% 11
\BOOKMARK [1][-]{section.2.3}{Serverless Control Plane Research}{chapter.2}% 12
\BOOKMARK [2][-]{subsection.2.3.1}{Load Balancing}{section.2.3}% 13
\BOOKMARK [2][-]{subsection.2.3.2}{Heterogeneous Hardware}{section.2.3}% 14
\BOOKMARK [2][-]{subsection.2.3.3}{Serverless Data-plane}{section.2.3}% 15
\BOOKMARK [1][-]{section.2.4}{Application Mitigations of Control Plane Deficiencies}{chapter.2}% 16
\BOOKMARK [1][-]{section.2.5}{Serverless Applications}{chapter.2}% 17
\BOOKMARK [1][-]{section.2.6}{ML in Serverless}{chapter.2}% 18
\BOOKMARK [1][-]{section.2.7}{Scientific Serverless Computing}{chapter.2}% 19
\BOOKMARK [0][-]{chapter.3}{Keeping Serverless Computing Alive with Greedy-Dual Caching}{}% 20
\BOOKMARK [1][-]{section.3.1}{Related Works}{chapter.3}% 21
\BOOKMARK [2][-]{subsection.3.1.1}{Caching Background}{section.3.1}% 22
\BOOKMARK [1][-]{section.3.2}{Keep-alive Tradeoffs}{chapter.3}% 23
\BOOKMARK [2][-]{subsection.3.2.1}{Policy Goals and Considerations}{section.3.2}% 24
\BOOKMARK [1][-]{section.3.3}{Caching-based Keep-Alive Policies}{chapter.3}% 25
\BOOKMARK [2][-]{subsection.3.3.1}{Greedy-Dual Keep-Alive Policy}{section.3.3}% 26
\BOOKMARK [2][-]{subsection.3.3.2}{Other Caching-Based Policies}{section.3.3}% 27
\BOOKMARK [1][-]{section.3.4}{Server Provisioning Policies}{chapter.3}% 28
\BOOKMARK [2][-]{subsection.3.4.1}{Static Provisioning}{section.3.4}% 29
\BOOKMARK [2][-]{subsection.3.4.2}{Elastic Dynamic Scaling}{section.3.4}% 30
\BOOKMARK [1][-]{section.3.5}{Implementation}{chapter.3}% 31
\BOOKMARK [1][-]{section.3.6}{Experimental Evaluation}{chapter.3}% 32
\BOOKMARK [2][-]{subsection.3.6.1}{Trace-Driven Keep-Alive Evaluation}{section.3.6}% 33
\BOOKMARK [2][-]{subsection.3.6.2}{OpenWhisk Evaluation}{section.3.6}% 34
\BOOKMARK [2][-]{subsection.3.6.3}{Effectiveness of Provisioning Policies}{section.3.6}% 35
\BOOKMARK [0][-]{chapter.4}{Load- and Locality-Aware Load Balancing}{}% 36
\BOOKMARK [1][-]{section.4.1}{Related Work}{chapter.4}% 37
\BOOKMARK [1][-]{section.4.2}{Background: Load Balancing}{chapter.4}% 38
\BOOKMARK [2][-]{subsection.4.2.1}{Consistent Hashing}{section.4.2}% 39
\BOOKMARK [1][-]{section.4.3}{Load-aware Consistent-Hashing}{chapter.4}% 40
\BOOKMARK [2][-]{subsection.4.3.1}{Tradeoff between Locality and Load}{section.4.3}% 41
\BOOKMARK [2][-]{subsection.4.3.2}{Key Principle: Load-based Forwarding}{section.4.3}% 42
\BOOKMARK [2][-]{subsection.4.3.3}{Server Load Information}{section.4.3}% 43
\BOOKMARK [2][-]{subsection.4.3.4}{Why CH-BL Is Insufficient}{section.4.3}% 44
\BOOKMARK [2][-]{subsection.4.3.5}{Incorporating Function Performance Characteristics}{section.4.3}% 45
\BOOKMARK [2][-]{subsection.4.3.6}{Handling Bursts}{section.4.3}% 46
\BOOKMARK [2][-]{subsection.4.3.7}{Putting it all together: CH-RLU}{section.4.3}% 47
\BOOKMARK [1][-]{section.4.4}{Implementation}{chapter.4}% 48
\BOOKMARK [2][-]{subsection.4.4.1}{Performance Optimizations For OpenWhisk}{section.4.4}% 49
\BOOKMARK [1][-]{section.4.5}{Evaluation}{chapter.4}% 50
\BOOKMARK [2][-]{subsection.4.5.1}{Evaluation Environment}{section.4.5}% 51
\BOOKMARK [2][-]{subsection.4.5.2}{Load-balancing Performance}{section.4.5}% 52
\BOOKMARK [0][-]{chapter.5}{Il\372vatar: A Low-Latency FaaS Research Control Plane}{}% 53
\BOOKMARK [1][-]{section.5.1}{Why a new control plane?}{chapter.5}% 54
\BOOKMARK [1][-]{section.5.2}{Il\372vatar Design}{chapter.5}% 55
\BOOKMARK [2][-]{subsection.5.2.1}{Architecture and Overview}{section.5.2}% 56
\BOOKMARK [2][-]{subsection.5.2.2}{Function Lifecycle}{section.5.2}% 57
\BOOKMARK [2][-]{subsection.5.2.3}{Worker Performance Optimizations}{section.5.2}% 58
\BOOKMARK [2][-]{subsection.5.2.4}{Container Handling}{section.5.2}% 59
\BOOKMARK [1][-]{section.5.3}{Function Invocation Queuing}{chapter.5}% 60
\BOOKMARK [2][-]{subsection.5.3.1}{Queue Architecture}{section.5.3}% 61
\BOOKMARK [2][-]{subsection.5.3.2}{Queuing Policies}{section.5.3}% 62
\BOOKMARK [1][-]{section.5.4}{Implementation}{chapter.5}% 63
\BOOKMARK [2][-]{subsection.5.4.1}{Support for FaaS research}{section.5.4}% 64
\BOOKMARK [1][-]{section.5.5}{Experimental Evaluation}{chapter.5}% 65
\BOOKMARK [2][-]{subsection.5.5.1}{Control Plane and Function Performance}{section.5.5}% 66
\BOOKMARK [2][-]{subsection.5.5.2}{Queuing Performance}{section.5.5}% 67
\BOOKMARK [1][-]{section.5.6}{Related Work}{chapter.5}% 68
\BOOKMARK [0][-]{chapter.6}{Black-Box GPU Acceleration for Serverless}{}% 69
\BOOKMARK [1][-]{section.6.1}{Serverless GPU Challenges}{chapter.6}% 70
\BOOKMARK [2][-]{subsection.6.1.1}{GPUs Containers}{section.6.1}% 71
\BOOKMARK [2][-]{subsection.6.1.2}{Serverless Scheduling}{section.6.1}% 72
\BOOKMARK [2][-]{subsection.6.1.3}{Balancing Workloads}{section.6.1}% 73
\BOOKMARK [1][-]{section.6.2}{Background}{chapter.6}% 74
\BOOKMARK [2][-]{subsection.6.2.1}{GPU Support for Serverless}{section.6.2}% 75
\BOOKMARK [2][-]{subsection.6.2.2}{GPU Sharing Mechanisms}{section.6.2}% 76
\BOOKMARK [1][-]{section.6.3}{Related Work}{chapter.6}% 77
\BOOKMARK [1][-]{section.6.4}{GPU Scheduling Design}{chapter.6}% 78
\BOOKMARK [2][-]{subsection.6.4.1}{Overview}{section.6.4}% 79
\BOOKMARK [2][-]{subsection.6.4.2}{Multi-Queuing}{section.6.4}% 80
\BOOKMARK [2][-]{subsection.6.4.3}{MQFQ-Sticky}{section.6.4}% 81
\BOOKMARK [2][-]{subsection.6.4.4}{Dispatch Algorithm}{section.6.4}% 82
\BOOKMARK [2][-]{subsection.6.4.5}{Memory Overcommitment}{section.6.4}% 83
\BOOKMARK [2][-]{subsection.6.4.6}{GPU Load Management}{section.6.4}% 84
\BOOKMARK [1][-]{section.6.5}{Implementation}{chapter.6}% 85
\BOOKMARK [2][-]{subsection.6.5.1}{Function Queue}{section.6.5}% 86
\BOOKMARK [2][-]{subsection.6.5.2}{GPU Driver Shim}{section.6.5}% 87
\BOOKMARK [1][-]{section.6.6}{Experimental Evaluation}{chapter.6}% 88
\BOOKMARK [2][-]{subsection.6.6.1}{UVM Shim}{section.6.6}% 89
\BOOKMARK [2][-]{subsection.6.6.2}{Queuing Knobs}{section.6.6}% 90
\BOOKMARK [2][-]{subsection.6.6.3}{MQFQ-Sticky Performance}{section.6.6}% 91
\BOOKMARK [1][-]{section.6.7}{Discussion}{chapter.6}% 92
\BOOKMARK [0][-]{chapter.7}{Conclusion and Future Work}{}% 93
\BOOKMARK [1][-]{section.7.1}{Future Work}{chapter.7}% 94
\BOOKMARK [2][-]{subsection.7.1.1}{Work Stealing Scheduling}{section.7.1}% 95
\BOOKMARK [2][-]{subsection.7.1.2}{Polymorphic Functions}{section.7.1}% 96
\BOOKMARK [2][-]{subsection.7.1.3}{Serverless for Distributed Computing}{section.7.1}% 97
\BOOKMARK [2][-]{subsection.7.1.4}{FaaS Security}{section.7.1}% 98
\BOOKMARK [1][-]{section.7.2}{Conclusion}{chapter.7}% 99
\BOOKMARK [0][-]{chapter*.71}{Bibliography}{}% 100
\BOOKMARK [0][-]{chapter*.72}{Curriculum Vitae}{}% 101
